{"version":3,"sources":["redux/messageRedux.js","components/sidebar/Sidebar.jsx","constants/index.js","requestMethods.js","redux/orderRedux.js","redux/productRedux.js","redux/userRedux.js","redux/apiCalls.js","components/topbar/Topbar.jsx","components/chart/Chart.jsx","components/featuredInfo/FeaturedInfo.jsx","components/widgetSm/WidgetSm.jsx","components/widgetLg/WidgetLg.jsx","pages/home/Home.jsx","pages/userList/UserList.jsx","firebase.js","pages/user/User.jsx","pages/newUser/NewUser.jsx","pages/productList/ProductList.jsx","pages/product/Product.jsx","pages/newProduct/NewProduct.jsx","pages/login/Login.jsx","pages/sales/Sales.jsx","pages/orderList/OrderList.jsx","pages/order/Order.jsx","pages/messageList/MessageList.jsx","pages/message/Message.jsx","App.js","redux/store.js","i18n.js","index.js"],"names":["messageSlice","createSlice","name","initialState","messages","isFetching","error","reducers","getMessageStart","state","getMessageSuccess","action","payload","sort","a","b","createdAt","localeCompare","getMessageFailure","messageToggleReadStart","messageToggleReadSuccess","id","index","findIndex","message","_id","read","messageToggleReadFailure","messageReadStart","messageReadSuccess","messageReadFailure","allMessagesReadStart","allMessagesReadSuccess","forEach","allMessagesReadFailure","actions","selectAllMessages","selectMessagesByUser","createSelector","userId","filter","SideBarLink","to","children","className","isActive","Sidebar","t","useTranslation","useSelector","numUnreadMessages","n","length","LineStyle","Timeline","TrendingUp","Shop","PermIdentity","Storefront","AttachMoney","BarChart","MailOutline","DynamicFeed","ChatBubbleOutline","WorkOutline","Report","TOKEN","register","number","totalSec","useLocale","useState","locale","setLocale","lang","localStorage","getItem","useEffect","BASE_URL","publicRequest","axios","create","baseURL","withCredentials","userRequest","updateRefreshToken","refreshToken","refreshTokenId","setItem","JSON","stringify","getRefreshToken","parse","interceptors","request","use","config","existingAccessToken","headers","token","accessToken","substring","currentDate","Date","decodedToken","jwt_decode","exp","getTime","put","res","data","newAccessToken","console","Promise","reject","orderSlice","orders","getOrderStart","getOrderSuccess","getOrderFailure","deleteOrderStart","deleteOrderSuccess","splice","item","deleteOrderFailure","updateOrderStart","updateOrderSuccess","updatedOrder","updateOrderFailure","addOrderStart","addOrderSuccess","push","addOrderFailure","productSlice","products","getProductStart","getProductSuccess","getProductFailure","deleteProductStart","deleteProductSuccess","deleteProductFailure","updateProductStart","updateProductSuccess","currentProduct","find","product","desc","updateProductFailure","addProductStart","addProductSuccess","addProductFailure","userSlice","currentUser","users","loginStart","loginSuccess","loginFailure","logoutStart","logoutSuccess","logoutFailure","getUsersStart","getUsersSuccess","getUsersFailure","updateUserStart","updateUserSuccess","updatedUser","user","updateUserFailure","deleteUserStart","deleteUserSuccess","deleteUserFailure","selectAllUsers","login","dispatch","post","others","log","logout","removeItem","defaults","common","getProducts","get","deleteProduct","delete","updateProduct","addProduct","getUsers","deleteUser","updateUser","getOrders","deleteOrder","updateOrder","order","getMessages","updateMessage","setMessageRead","Topbar","useDispatch","navigate","useNavigate","i18n","i18next","changeLanguage","style","textDecoration","onClick","e","preventDefault","handleClick","NotificationsNone","Language","onChange","target","value","Settings","src","alt","Chart","title","dataKey","grid","ResponsiveContainer","width","aspect","LineChart","XAxis","stroke","interval","Line","type","Tooltip","CartesianGrid","strokeDasharray","FeaturedInfo","income","setIncome","perc","setPerc","ignore","total","Math","floor","ArrowDownward","ArrowUpward","WidgetSm","setUsers","map","img","username","email","Visibility","WidgetLg","setOrders","Button","format","amount","status","Home","userStats","setUserStats","MONTHS","useMemo","prev","month","year","UserList","deleteUserId","setDeleteUserId","openDeleteDialog","setOpenDeleteDialog","columns","field","headerName","renderCell","params","row","DeleteOutline","rows","disableSelectionOnClick","getRowId","pageSize","checkboxSelection","Dialog","open","onClose","DialogTitle","DialogActions","color","autoFocus","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","User","useLocation","pathname","split","messagesByUser","inputs","setInputs","file","setFile","handleChange","CalendarToday","dob","PhoneAndroid","phone","LocationSearching","address","placeholder","fullname","htmlFor","Publish","display","files","fileName","storage","getStorage","storageRef","ref","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","getDownloadURL","then","downloadURL","userToUpdate","subject","NewUser","useForm","handleSubmit","errors","formState","handleCreateUser","onSubmit","maxLength","required","pattern","password","passwordConfirm","for","defaultValue","ProductList","deleteProductId","setDeleteProductId","deleteProductTitle","setDeleteProductTitle","inStock","PaperProps","border","borderRadius","backgroundColor","justifyContent","textAlign","variant","Product","location","productId","pStats","setPStats","totalSales","setTotalSales","cat","setCat","setColor","list","Sales","reduce","sum","handleDesc","slice","category","categories","colour","en","ua","ru","price","productToUpdate","disabled","NewProduct","canSave","every","Boolean","Login","setUsername","setPassword","height","flexDirection","alignItems","padding","marginBottom","orderStats","setOrderStats","OrderList","deleteOrderId","setDeleteOrderId","city","Order","orderId","setStatus","orderToUpdate","Person","LocalShippingOutlined","handleUpdateOrder","updatedAt","Place","line1","line2","postal_code","quantity","MessageList","handleToggleRead","messageToUpdate","Message","messageId","firstName","lastName","telephone","App","fallback","path","element","exact","persistConfig","key","version","appReducer","combineReducers","userReducer","productReducer","orderReducer","messageReducer","persistedReducer","persistReducer","purgeStoredState","undefined","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","debug","fallbackLng","interpolation","formatSeparator","ns","react","useSuspense","ReactDOM","render","loading","document","getElementById"],"mappings":"mtBAGaA,EAAeC,YAAY,CACpCC,KAAM,UACNC,aAAc,CACVC,SAAU,GACVC,YAAY,EACZC,OAAO,GAEXC,SAAU,CAENC,gBAAiB,SAACC,GACdA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDI,kBAAmB,SAACD,EAAOE,GACvBF,EAAMJ,YAAa,EACnBI,EAAML,SAAWO,EAAOC,QAAQC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,UAAUC,cAAcH,EAAEE,UAAtC,GACxC,EACDE,kBAAmB,SAACT,GAChBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDa,uBAAwB,SAACV,GACrBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDc,yBAA0B,SAACX,EAAOE,GAC9BF,EAAMJ,YAAa,EACnB,IAAMgB,EAAKV,EAAOC,QACZU,EAAQb,EAAML,SAASmB,WAAU,SAACC,GAAD,OAAaA,EAAQC,MAAQJ,CAA7B,KACxB,IAAXC,IACAb,EAAML,SAASkB,GAAOI,MAAQjB,EAAML,SAASkB,GAAOI,KAE3D,EACDC,yBAA0B,SAAClB,GACvBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDsB,iBAAkB,SAACnB,GACfA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDuB,mBAAoB,SAACpB,EAAOE,GACxBF,EAAMJ,YAAa,EADgB,IAE3BgB,EAAOV,EAAOC,QAAdS,GACFC,EAAQb,EAAML,SAASmB,WAAU,SAACC,GAAD,OAAaA,EAAQC,MAAQJ,CAA7B,KACxB,IAAXC,IACAb,EAAML,SAASkB,GAAOI,MAAO,EAEpC,EACDI,mBAAoB,SAACrB,GACjBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDyB,qBAAsB,SAACtB,GACnBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACD0B,uBAAwB,SAACvB,GACrBA,EAAML,SAAS6B,SAAQ,SAAAT,GACnBA,EAAQE,MAAO,CAClB,GACJ,EACDQ,uBAAwB,SAACzB,GACrBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,K,EAiBLN,EAAamC,QAZb3B,E,EAAAA,gBACAE,E,EAAAA,kBACAQ,E,EAAAA,kBACAC,E,EAAAA,uBACAC,E,EAAAA,yBACAO,E,EAAAA,yBACAC,E,EAAAA,iBACAC,E,EAAAA,mBACAC,E,EAAAA,mBAMW9B,G,EALX+B,qB,EACAC,uB,EACAE,uBAGWlC,EAAf,SAEaoC,EAAoB,SAAA3B,GAAK,OAAIA,EAAMe,QAAQpB,QAAlB,EAEzBiC,EAAuBC,YAChC,CAACF,EAAmB,SAAC3B,EAAO8B,GAAR,OAAmBA,CAAnB,IACpB,SAACnC,EAAUmC,GAAX,OAAsBnC,EAASoC,QAAO,SAAAhB,GAAO,OAAIA,EAAQe,SAAWA,CAAvB,GAA7C,I,OCxEEE,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAP,OAClB,cAAC,IAAD,CACED,GAAIA,EACJC,SAAUA,EACVC,UAAW,kBAAkB,mBAAlB,EAAGC,SAA+C,UAAY,GAA9D,GAJK,EAiGLC,EAzFQ,WAAO,IACpBC,EAAMC,YAAe,CAAC,YAAtBD,EACF3C,EAAW6C,YAAYb,GACvBc,EAAiB,OAAG9C,QAAH,IAAGA,OAAH,EAAGA,EAAUoC,QAAO,SAAAW,GAAC,QAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAGzB,KAAR,IAAc0B,OAE1D,OACE,qBAAKR,UAAU,UAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BG,EAAE,eAChC,qBAAIH,UAAU,cAAd,UACE,eAAC,EAAD,CAAaF,GAAG,IAAhB,UACI,cAACW,EAAA,EAAD,CAAWT,UAAU,gBACpBG,EAAE,WAEP,eAAC,EAAD,CAAaL,GAAG,aAAhB,UACE,cAACY,EAAA,EAAD,CAAUV,UAAU,gBACnBG,EAAE,gBAEL,eAAC,EAAD,CAAaL,GAAG,SAAhB,UACI,cAACa,EAAA,EAAD,CAAYX,UAAU,gBACrBG,EAAE,YAEP,eAAC,EAAD,CAAaL,GAAG,UAAhB,UACI,cAACc,EAAA,EAAD,CAAMZ,UAAU,gBACfG,EAAE,mBAIX,sBAAKH,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BG,EAAE,eAChC,qBAAIH,UAAU,cAAd,UACE,eAAC,EAAD,CAAaF,GAAG,SAAhB,UACI,cAACe,EAAA,EAAD,CAAcb,UAAU,gBACvBG,EAAE,YAEP,eAAC,EAAD,CAAaL,GAAG,YAAhB,UACI,cAACgB,EAAA,EAAD,CAAYd,UAAU,gBACrBG,EAAE,eAEP,eAAC,EAAD,CAAaL,GAAG,gBAAhB,UACE,cAACiB,EAAA,EAAD,CAAaf,UAAU,gBACtBG,EAAE,mBAEL,eAAC,EAAD,CAAaL,GAAG,WAAhB,UACE,cAACkB,EAAA,EAAD,CAAUhB,UAAU,gBACnBG,EAAE,oBAIT,sBAAKH,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BG,EAAE,cAChC,qBAAIH,UAAU,cAAd,UACE,eAAC,EAAD,CAAaF,GAAG,QAAhB,UACE,cAACmB,EAAA,EAAD,CAAajB,UAAU,gBACtBG,EAAE,WAEL,eAAC,EAAD,CAAaL,GAAG,YAAhB,UACE,cAACoB,EAAA,EAAD,CAAalB,UAAU,gBACtBG,EAAE,eAEL,eAAC,EAAD,CAAaL,GAAG,YAAhB,UACE,cAACqB,EAAA,EAAD,CAAmBnB,UAAU,gBAC5BG,EAAE,YAFL,IAEmBG,EAAoB,GAApB,WAA6BA,EAA7B,cAIvB,sBAAKN,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BG,EAAE,WAChC,qBAAIH,UAAU,cAAd,UACE,eAAC,EAAD,CAAaF,GAAG,UAAhB,UACE,cAACsB,EAAA,EAAD,CAAapB,UAAU,gBACtBG,EAAE,aAEL,eAAC,EAAD,CAAaL,GAAG,mBAAhB,UACE,cAACY,EAAA,EAAD,CAAUV,UAAU,gBACnBG,EAAE,gBAEL,eAAC,EAAD,CAAaL,GAAG,iBAAhB,UACE,cAACuB,EAAA,EAAD,CAAQrB,UAAU,gBACjBG,EAAE,wBAOhB,E,qGC/GYmB,EAAQ,QA0BrBC,YAAS,aAxBmB,SAACC,EAAQ9C,EAAO+C,GAqB1C,MAjBsB,CACpB,CAAC,0DAAc,uEACf,CAAC,yEAAmB,0EACpB,CAAC,wEAAkB,yEACnB,CAAC,mEAAkB,oEACnB,CAAC,sDAAe,uDAChB,CAAC,mEAAkB,oEACnB,CAAC,4DAAgB,6DACjB,CAAC,uDAAgB,8DACjB,CAAC,wEAAkB,yEACnB,CAAC,yEAAmB,0EACpB,CAAC,kEAAiB,mEAClB,CAAC,+EAAoB,gFACrB,CAAC,sDAAe,uDAChB,CAAC,uDAAgB,yDAGC/C,EACrB,IA2BM,SAASgD,IAAa,IAAD,EACIC,mBAAS,aADb,mBACjBC,EADiB,KACTC,EADS,KAElBC,EAAOC,aAAaC,QAAQ,cAIlC,OAHAC,qBAAU,WACNJ,EAAmB,OAATC,EAAgB,YAAc,YAC3C,GAAE,CAACA,IACGF,CACV,CATDL,YAAS,aArBmB,SAACC,EAAQ9C,EAAO+C,GAkB1C,MAjBsB,CACpB,CAAC,iCAAS,iEACV,CAAC,mEAAkB,0EACnB,CAAC,wEAAkB,+EACnB,CAAC,mEAAkB,0EACnB,CAAC,kEAAiB,yEAClB,CAAC,6DAAiB,oEAClB,CAAC,sDAAe,6DAChB,CAAC,uDAAgB,8DACjB,CAAC,wEAAkB,+EACnB,CAAC,mEAAkB,0EACnB,CAAC,kEAAiB,yEAClB,CAAC,yEAAmB,gFACpB,CAAC,gDAAc,uDACf,CAAC,6DAAiB,qEAGA/C,EACrB,I,cChDYwD,GAAW,2CAEXC,GAAgBC,IAAMC,OAAO,CACtCC,QAASJ,GACTK,iBAAiB,IAGRC,GAAcJ,IAAMC,OAAO,CACpCC,QAASJ,GACTK,iBAAiB,IAGRE,GAAqB,SAACC,EAAcC,GAC7CZ,aAAaa,QAAQtB,EAAOuB,KAAKC,UAAU,CACvCJ,eACAC,mBAEP,EAEYI,GAAkB,kBAAMF,KAAKG,MAAMjB,aAAaC,QAAQV,IAAU,KAAhD,EAM/BkB,GAAYS,aAAaC,QAAQC,IAAjC,uCAAqC,WAAOC,GAAP,+BAAAlF,EAAA,0DAC7BmF,IAAwBD,EAAOE,QAAQC,SAEjCC,EADe,UACDJ,EAAOE,QAAQC,aADd,aACD,EAAsBE,UAAU,GAChDC,EAAc,IAAIC,KAChBC,EAAeJ,GAAeK,aAAWL,GAC/CH,EAAyC,IAAnBO,EAAaE,IAAaJ,EAAYK,WAE3DV,EAR4B,0BASYN,KAAjCL,EATqB,EASrBA,aAAcC,EATO,EASPA,eATO,kBAWPR,GAAc6B,IAAI,sBAAuB,CAACtB,eAAcC,mBAXjD,OAWnBsB,EAXmB,OAYzBxB,GAAmBwB,EAAIC,KAAKxB,aAAcC,GAC1CS,EAAOE,QAAP,MAA0B,UAAYW,EAAIC,KAAKC,eAbtB,kDAezBC,QAAQ1G,MAAR,MAfyB,iCAkB1B0F,GAlB0B,0DAArC,uDAmBG,SAAC1F,GACA,OAAO2G,QAAQC,OAAO5G,EACzB,I,YChDK6G,GAAalH,YAAY,CAC3BC,KAAM,QACNC,aAAc,CACViH,OAAQ,GACR/G,YAAY,EACZC,OAAO,GAEXC,SAAU,CACN8G,cAAe,SAAC5G,GACZA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDgH,gBAAiB,SAAC7G,EAAOE,GACrBF,EAAMJ,YAAa,EACnBI,EAAM2G,OAASzG,EAAOC,OACzB,EACD2G,gBAAiB,SAAC9G,GACdA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDkH,iBAAkB,SAAC/G,GACfA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDmH,mBAAoB,SAAChH,EAAOE,GACxBF,EAAMJ,YAAa,EACnBI,EAAM2G,OAAOM,OACTjH,EAAM2G,OAAO7F,WAAU,SAAAoG,GAAI,OAAIA,EAAKlG,MAAQd,EAAOC,QAAQS,EAAhC,IAC3B,EAEP,EACDuG,mBAAoB,SAACnH,GACjBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDuH,iBAAkB,SAACpH,GACfA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDwH,mBAAoB,SAACrH,EAAOE,GAAY,IAAD,EACNA,EAAOC,QAA5BS,EAD2B,EAC3BA,GAAI0G,EADuB,EACvBA,aACNzG,EAAQb,EAAM2G,OAAO7F,WAAU,SAACoG,GAAD,OAAUA,EAAKlG,MAAQJ,CAAvB,KACtB,IAAXC,IACAb,EAAM2G,OAAO9F,GAAb,6BAA2Bb,EAAM2G,OAAO9F,IAAWyG,IAEvDtH,EAAMJ,YAAa,CACtB,EACD2H,mBAAoB,SAACvH,GACjBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACD2H,cAAe,SAACxH,GACZA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACD4H,gBAAiB,SAACzH,EAAOE,GACrBF,EAAMJ,YAAa,EACnBI,EAAM2G,OAAOe,KAAKxH,EAAOC,QAC5B,EACDwH,gBAAiB,SAAC3H,GACdA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,K,GAiBL6G,GAAWhF,QAZXkF,G,GAAAA,cACAC,G,GAAAA,gBACAC,G,GAAAA,gBACAC,G,GAAAA,iBACAC,G,GAAAA,mBACAG,G,GAAAA,mBACAC,G,GAAAA,iBACAC,G,GAAAA,mBACAE,G,GAAAA,mBAMWb,I,GALXc,c,GACAC,gB,GACAE,gBAGWjB,GAAf,SCjFakB,GAAepI,YAAY,CACpCC,KAAM,UACNC,aAAc,CACVmI,SAAU,GACVjI,YAAY,EACZC,OAAO,GAEXC,SAAU,CAENgI,gBAAiB,SAAC9H,GACdA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDkI,kBAAmB,SAAC/H,EAAOE,GACvBF,EAAMJ,YAAa,EACnBI,EAAM6H,SAAW3H,EAAOC,OAC3B,EACD6H,kBAAmB,SAAChI,GAChBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EAGDoI,mBAAoB,SAACjI,GACjBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDqI,qBAAsB,SAAClI,EAAOE,GAC1BF,EAAMJ,YAAa,EACnBI,EAAM6H,SAASZ,OACXjH,EAAM6H,SAAS/G,WAAU,SAAAoG,GAAI,OAAIA,EAAKlG,MAAQd,EAAOC,QAAQS,EAAhC,IAC7B,EAEP,EACDuH,qBAAsB,SAACnI,GACnBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EAGDuI,mBAAoB,SAACpI,GACjBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDwI,qBAAsB,SAACrI,EAAOE,GAC1B,IAAMoI,EAAiBtI,EAAM6H,SAASU,MAAK,SAACrB,GAAD,OAAUA,EAAKlG,MAAQd,EAAOC,QAAQS,EAAtC,IAC3CZ,EAAMJ,YAAa,EACnBI,EAAM6H,SAAS7H,EAAM6H,SAAS/G,WAAU,SAACoG,GAAD,OAAUA,EAAKlG,MAAQd,EAAOC,QAAQS,EAAtC,KAAxC,0CACO0H,GACApI,EAAOC,QAAQqI,SAFtB,IAGIC,KAAK,6BACEH,EAAeG,MACfvI,EAAOC,QAAQqI,QAAQC,OAGrC,EACDC,qBAAsB,SAAC1I,GACnBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EAGD8I,gBAAiB,SAAC3I,GACdA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACD+I,kBAAmB,SAAC5I,EAAOE,GACvBF,EAAMJ,YAAa,EACnBI,EAAM6H,SAASH,KAAKxH,EAAOC,QAC9B,EACD0I,kBAAmB,SAAC7I,GAChBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,K,GAiBL+H,GAAalG,QAZboG,G,GAAAA,gBACAC,G,GAAAA,kBACAC,G,GAAAA,kBACAC,G,GAAAA,mBACAC,G,GAAAA,qBACAC,G,GAAAA,qBACAC,G,GAAAA,mBACAC,G,GAAAA,qBACAK,G,GAAAA,qBACAC,G,GAAAA,gBACAC,G,GAAAA,kBACAC,G,GAAAA,kBAGWjB,MAAf,QC5FMkB,GAAYtJ,YAAY,CAC1BC,KAAM,OACNC,aAAc,CACVqJ,YAAa,KACbnJ,YAAY,EACZC,OAAO,EACPmJ,MAAO,IAEXlJ,SAAU,CACNmJ,WAAY,SAACjJ,GACTA,EAAMJ,YAAa,CACtB,EACDsJ,aAAc,SAAClJ,EAAOE,GAClBF,EAAMJ,YAAa,EACnBI,EAAM+I,YAAc7I,EAAOC,OAC9B,EACDgJ,aAAc,SAACnJ,GACXA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDuJ,YAAa,SAACpJ,GACVA,EAAMJ,YAAa,CACtB,EACDyJ,cAAe,SAACrJ,GACZA,EAAMJ,YAAa,EACnBI,EAAM+I,YAAc,KACpB/I,EAAMH,OAAQ,CACjB,EACDyJ,cAAe,SAACtJ,GACZA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACD0J,cAAe,SAACvJ,GACZA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACD2J,gBAAiB,SAACxJ,EAAOE,GACrBF,EAAMJ,YAAa,EACnBI,EAAMgJ,MAAQ9I,EAAOC,OACxB,EACDsJ,gBAAiB,SAACzJ,GACdA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACD6J,gBAAiB,SAAC1J,GACdA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACD8J,kBAAmB,SAAC3J,EAAOE,GAAY,IAAD,EACNA,EAAOC,QAA3BS,EAD0B,EAC1BA,GAAIgJ,EADsB,EACtBA,YACN/I,EAAQb,EAAMgJ,MAAMlI,WAAU,SAAC+I,GAAD,OAAUA,EAAK7I,MAAQJ,CAAvB,KACrB,IAAXC,IACAb,EAAMgJ,MAAMnI,GAAZ,6BAA0Bb,EAAMgJ,MAAMnI,IAAW+I,IAErD5J,EAAMJ,YAAa,CACtB,EACDkK,kBAAmB,SAAC9J,GAChBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDkK,gBAAiB,SAAC/J,GACdA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,EACDmK,kBAAmB,SAAChK,EAAOE,GACvBF,EAAMJ,YAAa,EACnBI,EAAMgJ,MAAM/B,OACRjH,EAAM6H,SAAS/G,WAAU,SAAAoG,GAAI,OAAIA,EAAKlG,MAAQd,EAAOC,QAAQS,EAAhC,IAC7B,EAEP,EACDqJ,kBAAmB,SAACjK,GAChBA,EAAMJ,YAAa,EACnBI,EAAMH,OAAQ,CACjB,K,GAoBLiJ,GAAUpH,QAfVuH,G,GAAAA,WACAC,G,GAAAA,aACAC,G,GAAAA,aACAC,G,GAAAA,YACAC,G,GAAAA,cACAC,G,GAAAA,cACAC,G,GAAAA,cACAC,G,GAAAA,gBACAC,G,GAAAA,gBACAC,G,GAAAA,gBACAC,G,GAAAA,kBACAG,G,GAAAA,kBACAC,G,GAAAA,gBACAC,G,GAAAA,kBACAC,G,GAAAA,kBAEWnB,MAAf,QAEaoB,GAAiB,SAAAlK,GAAK,OAAIA,EAAM6J,KAAKb,KAAf,ECtCtBmB,GAAK,uCAAG,WAAOC,EAAUP,GAAjB,uBAAAxJ,EAAA,6DACjB+J,EAASnB,MADQ,kBAGU3E,GAAc+F,KAAK,cAAeR,GAH5C,gBAGLxD,EAHK,EAGLA,KACyDA,EAAzDV,YAAad,EAA4CwB,EAA5CxB,aAAcC,EAA8BuB,EAA9BvB,eAAmBwF,EAJzC,YAIoDjE,EAJpD,iDAKb+D,EAASlB,GAAaoB,IACtB1F,GAAmBC,EAAcC,GANpB,kDAQbsF,EAASjB,MACT5C,QAAQgE,IAAR,MATa,0DAAH,wDAaLC,GAAM,uCAAG,WAAOJ,EAAUtF,GAAjB,SAAAzE,EAAA,6DAClB+J,EAAShB,MADS,kBAGRzE,GAAY0F,KAAK,oBAAqBvF,GAH9B,OAIdsF,EAASf,MJnDsBnF,aAAauG,WAAWhH,UIqDhDkB,GAAY+F,SAASjF,QAAQkF,OAA7B,MANO,gDAQdP,EAASd,MACT/C,QAAQgE,IAAR,MATc,yDAAH,wDAaNK,GAAW,uCAAG,WAAOR,GAAP,eAAA/J,EAAA,6DACvB+J,EAAStC,MADc,kBAGDxD,GAAcuG,IAAI,aAHjB,OAGbzE,EAHa,OAInBgE,EAASrC,GAAkB3B,EAAIC,OAJZ,gDAMnB+D,EAASpC,MACTzB,QAAQgE,IAAR,MAPmB,yDAAH,sDAWXO,GAAa,uCAAG,WAAOlK,EAAIwJ,GAAX,SAAA/J,EAAA,6DACzB+J,EAASnC,MADgB,kBAGftD,GAAYoG,OAAZ,oBAAgCnK,IAHjB,OAIrBwJ,EAASlC,GAAqBtH,IAJT,gDAMrBwJ,EAASjC,MACT5B,QAAQgE,IAAR,MAPqB,yDAAH,wDAWbS,GAAa,uCAAG,WAAOpK,EAAI4H,EAAS4B,GAApB,SAAA/J,EAAA,6DACzB+J,EAAShC,MADgB,kBAIfzD,GAAYwB,IAAZ,oBAA6BvF,GAAM4H,GAJpB,OAKrB4B,EAAS/B,GAAqB,CAACzH,KAAI4H,aALd,gDAOrB4B,EAAS1B,MACTnC,QAAQgE,IAAR,MARqB,yDAAH,0DAYbU,GAAU,uCAAG,WAAOzC,EAAS4B,GAAhB,eAAA/J,EAAA,6DACtB+J,EAASzB,MADa,kBAGAhE,GAAY0F,KAAZ,YAA8B7B,GAH9B,OAGZpC,EAHY,OAIlBgE,EAASxB,GAAkBxC,EAAIC,OAJb,gDAMlB+D,EAASvB,MACTtC,QAAQgE,IAAR,MAPkB,yDAAH,wDAWVW,GAAQ,uCAAG,WAAOd,GAAP,eAAA/J,EAAA,6DACpB+J,EAASb,MADW,kBAGE5E,GAAYkG,IAAI,UAHlB,OAGVzE,EAHU,OAIhBgE,EAASZ,GAAgBpD,EAAIC,OAJb,gDAMhB+D,EAASX,MACTlD,QAAQgE,IAAR,MAPgB,yDAAH,sDAWRY,GAAU,uCAAG,WAAOvK,EAAIwJ,GAAX,SAAA/J,EAAA,6DACtB+J,EAASL,MADa,kBAGZpF,GAAYoG,OAAZ,iBAA6BnK,IAHjB,OAIlBwJ,EAASJ,GAAkBpJ,IAJT,gDAMlBwJ,EAASH,MACT1D,QAAQgE,IAAR,MAPkB,yDAAH,wDAWVa,GAAU,uCAAG,WAAOxK,EAAIiJ,EAAMO,GAAjB,iBAAA/J,EAAA,6DACtB+J,EAASV,MADa,kBAGA/E,GAAYwB,IAAZ,iBAA0BvF,GAAMiJ,GAHhC,OAGZzD,EAHY,OAIZwD,EAAcxD,EAAIC,KACxB+D,EAAST,GAAkB,CAAC/I,KAAIgJ,iBALd,gDAOlBQ,EAASN,MACTvD,QAAQgE,IAAR,MARkB,yDAAH,0DAYVc,GAAS,uCAAG,WAAOjB,GAAP,eAAA/J,EAAA,6DACrB+J,EAASxD,MADY,kBAGCjC,GAAYkG,IAAI,WAHjB,OAGXzE,EAHW,OAIjBgE,EAASvD,GAAgBT,EAAIC,OAJZ,gDAMjB+D,EAAStD,MACTP,QAAQgE,IAAR,MAPiB,yDAAH,sDAWTe,GAAW,uCAAG,WAAO1K,EAAIwJ,GAAX,SAAA/J,EAAA,6DACvB+J,EAASrD,MADc,kBAGbpC,GAAYoG,OAAZ,kBAA8BnK,IAHjB,OAInBwJ,EAASpD,GAAmBpG,IAJT,gDAMnBwJ,EAASjD,MACTZ,QAAQgE,IAAR,MAPmB,yDAAH,wDAWXgB,GAAW,uCAAG,WAAO3K,EAAI4K,EAAOpB,GAAlB,iBAAA/J,EAAA,6DACvB+J,EAAShD,MADc,kBAIDzC,GAAYwB,IAAZ,kBAA2BvF,GAAM4K,GAJhC,OAIbpF,EAJa,OAKbkB,EAAelB,EAAIC,KACzB+D,EAAS/C,GAAmB,CAACzG,KAAI0G,kBANd,gDAQnB8C,EAAS7C,MACThB,QAAQgE,IAAR,MATmB,yDAAH,0DAaXkB,GAAW,uCAAG,WAAOrB,GAAP,eAAA/J,EAAA,6DACvB+J,EAASrK,KADc,kBAGD4E,GAAYkG,IAAI,kBAHf,OAGbzE,EAHa,OAInBgE,EAASnK,EAAkBmG,EAAIC,OAJZ,gDAMnB+D,EAAS3J,KACT8F,QAAQgE,IAAR,MAPmB,yDAAH,sDAWXmB,GAAa,uCAAG,WAAO9K,EAAIG,EAASqJ,GAApB,SAAA/J,EAAA,6DACzB+J,EAAS1J,KADgB,kBAGfiE,GAAYwB,IAAZ,yBAAkCvF,GAAMG,GAHzB,OAIrBqJ,EAASzJ,EAAyBC,IAJb,gDAMrBwJ,EAASlJ,KACTqF,QAAQgE,IAAR,MAPqB,yDAAH,0DAWboB,GAAc,uCAAG,WAAO/K,EAAIG,EAASqJ,GAApB,SAAA/J,EAAA,6DAC1B+J,EAASjJ,KADiB,kBAGhBwD,GAAYwB,IAAZ,yBAAkCvF,GAAMG,GAHxB,OAItBqJ,EAAShJ,EAAmBR,IAJN,gDAMtBwJ,EAAS/I,KACTkF,QAAQgE,IAAR,MAPsB,yDAAH,0D,UC5IZqB,GAvEA,WACb,IAAM/B,EAAOrH,aAAY,SAAAxC,GAAK,OAAIA,EAAM6J,KAAKd,WAAf,IACxBqB,EAAWyB,cACXC,EAAWC,cAHE,EAICxJ,YAAe,CAAC,WAA5ByJ,EAJW,EAIXA,KAAM1J,EAJK,EAILA,EACR3C,EAAW6C,YAAYb,GACvBc,EAAiB,OAAG9C,QAAH,IAAGA,OAAH,EAAGA,EAAUoC,QAAO,SAAAW,GAAC,QAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAGzB,KAAR,IAAc0B,OAM1DyB,qBAAU,WAAO,IAAD,GACV,UAAAF,aAAaC,QAAQ,qBAArB,eAAoCxB,QAAS,GAC/CsJ,KAAQC,eAAe,KAE1B,GAAE,IAEH9H,qBAAU,WACHyF,GAEHiC,EAAS,SAEZ,GAAE,CAACjC,EAAMiC,IAQV,OACE,qBAAK3J,UAAU,SAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,CAAMF,GAAG,IAAIkK,MAAO,CAAEC,eAAgB,QAAtC,SACE,sBAAMjK,UAAU,OAAhB,SAAwBG,EAAE,cAG9B,sBAAKH,UAAU,WAAf,UACG0H,EACG,wBAAQ1H,UAAU,eAAekK,QAAS,SAACC,GAAD,OAhBlC,SAACA,GACnBA,EAAEC,iBACF,IAAMzH,EAAiBI,KAAkBJ,eACzC0F,GAAOJ,EAAU,CAAEtF,kBACpB,CAY4D0H,CAAYF,EAAnB,EAA1C,SAAkEhK,EAAE,YACpE,cAAC,IAAD,CAAML,GAAG,SAASE,UAAU,eAA5B,SAA4CG,EAAE,WAElD,cAAC,IAAD,CAAML,GAAG,YAAT,SACE,sBAAKE,UAAU,sBAAf,UACE,cAACsK,EAAA,EAAD,IACChK,EAAoB,GAAK,sBAAMN,UAAU,eAAhB,SAAgCM,SAG9D,sBAAKN,UAAU,sBAAf,UACE,cAACuK,EAAA,EAAD,IACA,yBACEvK,UAAU,iBACVwK,SA9CW,SAACL,GACtBN,EAAKE,eAAeI,EAAEM,OAAOC,MAC9B,EA6CWA,MAAO3I,aAAaC,QAAQ,cAH9B,UAKE,wBAAQ0I,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,sBAGJ,qBAAK1K,UAAU,sBAAf,SACE,cAAC2K,EAAA,EAAD,MAEF,qBAAKC,IAAI,2IAA2IC,IAAI,GAAG7K,UAAU,qBAK9K,E,uFCtDc8K,GAjBD,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAO7G,EAA0B,EAA1BA,KAAM8G,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAErC,OACE,sBAAKjL,UAAU,QAAf,UACE,oBAAIA,UAAU,aAAd,SAA4B+K,IAC5B,cAACG,GAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAQ,EAA1C,SACE,eAACC,GAAA,EAAD,CAAWnH,KAAMA,EAAjB,UACE,cAACoH,GAAA,EAAD,CAAON,QAAQ,OAAOO,OAAO,UAAUC,SAAS,qBAChD,cAACC,GAAA,EAAD,CAAMC,KAAK,WAAWV,QAASA,EAASO,OAAO,YAC/C,cAACI,GAAA,EAAD,IACCV,GAAQ,cAACW,GAAA,EAAD,CAAeL,OAAO,UAAUM,gBAAgB,eAKlE,E,6BC2CcC,GA7DM,WAAO,IAAD,IACGnK,mBAAS,IADZ,mBAClBoK,EADkB,KACVC,EADU,OAEDrK,mBAAS,GAFR,mBAElBsK,EAFkB,KAEZC,EAFY,KAGjB/L,EAAMC,YAAe,CAAC,iBAAtBD,EAiBR,OAfA8B,qBAAU,WACR,IAAIkK,GAAS,EAWb,OAVA,sBAAC,gCAAAjO,EAAA,+EAEqBsE,GAAYkG,IAAI,iBAFrC,OAESzE,EAFT,QAGIkI,GAAUH,EAAU/H,EAAIC,OACxBiI,GAAUD,EAA4C,KAAnC,UAAAjI,EAAIC,KAAK6H,EAAOvL,OAAS,UAAzB,eAA6B4L,QAA9B,UAA2CnI,EAAIC,KAAK6H,EAAOvL,OAAS,UAApE,aAA2C,EAA6B4L,OAAQ,KAJtG,gDAMGhI,QAAQgE,IAAR,MANH,wDAAD,GAUO,kBAAM+D,GAAS,CAAf,CACR,GAAE,CAACJ,EAAOvL,SAGT,sBAAKR,UAAU,WAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,gBAAhB,SAAiCG,EAAE,aACnC,sBAAKH,UAAU,yBAAf,UACE,uBAAMA,UAAU,gBAAhB,oBAAiC+L,EAAOA,EAAOvL,OAAS,UAAxD,aAAiC,EAA2B4L,MAA5D,IAAoEjM,EAAE,UACtE,uBAAMH,UAAU,oBAAhB,cACIqM,KAAKC,MAAML,IAAS,GAAI,IACzBA,EAAO,EACN,cAACM,GAAA,EAAD,CAAgBvM,UAAU,0BAE1B,cAACwM,GAAA,EAAD,CAAaxM,UAAU,uBAI7B,sBAAMA,UAAU,cAAhB,SAA+BG,EAAE,+BAEnC,sBAAKH,UAAU,eAAf,UACE,sBAAMA,UAAU,gBAAhB,SAAiCG,EAAE,WACnC,sBAAKH,UAAU,yBAAf,UACE,sBAAMA,UAAU,gBAAhB,oBACA,uBAAMA,UAAU,oBAAhB,kBACO,cAACuM,GAAA,EAAD,CAAevM,UAAU,gCAGlC,sBAAMA,UAAU,cAAhB,SAA+BG,EAAE,+BAEnC,sBAAKH,UAAU,eAAf,UACE,sBAAMA,UAAU,gBAAhB,SAAiCG,EAAE,UACnC,sBAAKH,UAAU,yBAAf,UACE,sBAAMA,UAAU,gBAAhB,oBACA,uBAAMA,UAAU,oBAAhB,kBACO,cAACwM,GAAA,EAAD,CAAaxM,UAAU,uBAGhC,sBAAMA,UAAU,cAAhB,SAA+BG,EAAE,iCAIxC,E,0BCNcsM,GApDE,WAAO,IACdtM,EAAMC,YAAe,CAAC,aAAtBD,EADa,EAEKwB,mBAAS,IAFd,mBAEdkF,EAFc,KAEP6F,EAFO,KAoBrB,OAhBAzK,qBAAU,WACR,IAAIkK,GAAS,EAUb,OATA,sBAAC,4BAAAjO,EAAA,+EAEqBsE,GAAYkG,IAAI,mBAFrC,OAESzE,EAFT,QAGIkI,GAAUO,EAASzI,EAAIC,MAH3B,gDAKGE,QAAQgE,IAAR,MALH,wDAAD,GASO,WACL+D,GAAS,CACV,CACF,GAAE,IAGD,sBAAKnM,UAAU,WAAf,UACE,sBAAMA,UAAU,gBAAhB,SAAiCG,EAAE,oBACnC,oBAAIH,UAAU,eAAd,gBACG6G,QADH,IACGA,OADH,EACGA,EAAO8F,KAAI,SAACjF,GAAD,OACV,qBAAI1H,UAAU,mBAAd,UACE,sBAAKA,UAAU,oBAAf,UACE,qBACE4K,IAAKlD,EAAKkF,KACR,uEAEF/B,IAAI,GACJ7K,UAAU,gBAEZ,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,mBAAhB,SAAoC0H,EAAKmF,WACzC,sBAAM7M,UAAU,gBAAhB,SAAiC0H,EAAKoF,cAG1C,cAAC,IAAD,CAAShN,GAAE,gBAAW4H,EAAK7I,KAA3B,SACE,yBAAQmB,UAAU,iBAAlB,UACE,cAAC+M,GAAA,EAAD,CAAY/M,UAAU,iBACrBG,EAAE,kBAjB6BuH,EAAK7I,IADjC,QA0BnB,ECIcmO,I,OAtDE,WAAO,IAAD,EACOrL,mBAAS,IADhB,mBACd6C,EADc,KACNyI,EADM,KAEb9M,EAAMC,YAAe,CAAC,aAAtBD,EACFyB,EAASF,IAEfO,qBAAU,WACR,IAAIkK,GAAS,EAUb,OATA,sBAAC,4BAAAjO,EAAA,+EAEqBsE,GAAYkG,IAAI,UAFrC,OAESzE,EAFT,QAGIkI,GAAUc,EAAUhJ,EAAIC,MAH5B,gDAKGE,QAAQgE,IAAR,MALH,wDAAD,GASO,WACL+D,GAAS,CACV,CACF,GAAE,IACH,IAAMe,EAAS,SAAC,GAAc,IAAZxB,EAAW,EAAXA,KAChB,OAAO,wBAAQ1L,UAAW,kBAAoB0L,EAAvC,SAA8CA,GACtD,EACD,OACE,sBAAK1L,UAAU,WAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BG,EAAE,yBACjC,wBAAOH,UAAU,gBAAjB,UACE,gCACE,qBAAIA,UAAU,aAAd,UACE,oBAAIA,UAAU,aAAd,SAA4BG,EAAE,cAC9B,oBAAIH,UAAU,aAAd,SAA4BG,EAAE,UAC9B,oBAAIH,UAAU,aAAd,SAA4BG,EAAE,YAC9B,oBAAIH,UAAU,aAAd,SAA4BG,EAAE,iBAGjCqE,EAAOmI,KAAI,SAACtD,GAAD,OACZ,gCACE,qBAAIrJ,UAAU,aAAd,UACE,oBAAIA,UAAU,eAAd,SACE,sBAAMA,UAAU,eAAhB,SAAgCqJ,EAAM1J,WAExC,oBAAIK,UAAU,eAAd,SAA8BmN,YAAO9D,EAAMjL,UAAWwD,KACtD,qBAAI5B,UAAU,iBAAd,UAAgCqJ,EAAM+D,OAAtC,IAA+CjN,EAAE,UACjD,oBAAIH,UAAU,iBAAd,SACE,cAACkN,EAAD,CAAQxB,KAAMrC,EAAMgE,aAPQhE,EAAMxK,MAD5BwK,EAAMxK,IADN,SAiBnB,GCYcyO,GA7DF,WAAO,IACVnN,EAAMC,YAAe,CAAC,SAAtBD,EADS,EAEiBwB,mBAAS,IAF1B,mBAEV4L,EAFU,KAECC,EAFD,KAGX9F,EAAOrH,aAAY,SAAAxC,GAAK,OAAIA,EAAM6J,IAAV,IAExB+F,EAASC,mBACb,iBAAM,CACJ,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAZF,GAcA,IAyBF,OAtBAzL,qBAAU,WACR,IAAIkK,GAAS,EAgBb,OAfCzE,GAAQ,sBAAC,4BAAAxJ,EAAA,+EAEYsE,GAAYkG,IAAI,gBAF5B,OAEAzE,EAFA,QAGLkI,GAAUqB,EAAa,IACxBvJ,EAAIC,KAAKyI,KAAI,SAAA5H,GAAI,OACdoH,GAAUqB,GAAa,SAAAG,GAAI,6BACvBA,GADuB,CAE1B,CAACrQ,KAAK,GAAD,OAAImQ,EAAO1I,EAAKlG,IAAI+O,MAAM,GAA1B,YAAgC7I,EAAKlG,IAAIgP,MAAQ,cAAe9I,EAAKqH,QAFhD,GADb,IAJX,gDAWNhI,QAAQgE,IAAR,MAXM,wDAAD,GAeF,WACL+D,GAAS,CACV,CACF,GAAE,CAACsB,EAAQ/F,IAGV,sBAAK1H,UAAU,OAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CACEkE,KAAMqJ,EACNxC,MAAO5K,EAAE,6BACT8K,MAAI,EAACD,QAAQ,gBAEf,sBAAKhL,UAAU,cAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,SAIP,E,qECsCc8N,GA5FE,WACf,IAAM7F,EAAWyB,cACX7C,EAAQxG,YAAY0H,IAFL,EAGmBpG,mBAAS,MAH5B,mBAGdoM,EAHc,KAGAC,EAHA,OAI2BrM,oBAAS,GAJpC,mBAIdsM,EAJc,KAIIC,EAJJ,KAKb/N,EAAMC,YAAe,CAAC,aAAtBD,EAEFgO,EAAU,CACd,CAAEC,MAAO,MAAOC,WAAYlO,EAAE,MAAOgL,MAAO,KAC5C,CACEiD,MAAO,WACPC,WAAYlO,EAAE,QACdgL,MAAO,IACPmD,WAAY,SAACC,GACX,OACE,qBAAKvO,UAAU,eAAf,SAEGuO,EAAOC,IAAI3B,UAGjB,GAEH,CAAEuB,MAAO,QAASC,WAAYlO,EAAE,SAAUgL,MAAO,KACjD,CACEiD,MAAO,SACPC,WAAYlO,EAAE,UACdgL,MAAO,KAET,CACEiD,MAAO,cACPC,WAAYlO,EAAE,sBACdgL,MAAO,KAET,CACEiD,MAAO,SACPC,WAAYlO,EAAE,UACdgL,MAAO,IACPmD,WAAY,SAACC,GACX,OACE,qCACE,cAAC,IAAD,CAAMzO,GAAI,SAAWyO,EAAOC,IAAI3P,IAAhC,SACE,wBAAQmB,UAAU,eAAlB,SAAkCG,EAAE,YAEtC,cAACsO,GAAA,EAAD,CACEzO,UAAU,iBACVkK,QAAS,WACP8D,EAAgBO,EAAOC,IAAI3P,KAC3BqP,GAAoB,EACrB,MAIR,IAIL,OACE,sBAAKlO,UAAU,WAAf,UACE,cAAC,IAAD,CAAMF,GAAG,WAAT,SACE,wBAAQE,UAAU,eAAlB,SAAkCG,EAAE,uBAEnC0G,EAAMrG,QAAU,cAAC,KAAD,CACjBkO,KAAM7H,EACN8H,yBAAuB,EACvBR,QAASA,EACTS,SAAU,SAACJ,GAAD,OAASA,EAAI3P,GAAb,EACVgQ,SAAU,EACVC,mBAAiB,IAEnB,eAACC,GAAA,EAAD,CACEC,KAAMf,EACNgB,QAAS,kBAAMf,GAAoB,EAA1B,EACT,kBAAgB,qBAChB,mBAAiB,2BAJnB,UAME,eAACgB,GAAA,EAAD,WAAc/O,EAAE,sBAAhB,IAAwC4N,EAAxC,QACA,eAACoB,GAAA,EAAD,WACE,cAAC,KAAD,CAAQjF,QAAS,kBAAMgE,GAAoB,EAA1B,EAAkCkB,MAAM,UAAzD,SACGjP,EAAE,YAEL,cAAC,KAAD,CAAQ+J,QAAS,WACflB,GAAW+E,EAAc9F,GACzBiG,GAAoB,EACrB,EAAEkB,MAAM,UAAUC,WAAS,EAH5B,SAIGlP,EAAE,oBAMd,E,6ECxFcmP,GAFHC,aAVW,CACrBC,OAAQ,0CACRC,WAAY,6BACZC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,gBACnBC,MAAO,+CC8OMC,GArOF,WACX,IACMnQ,EADWoQ,cACOC,SAASC,MAAM,KAAK,GACtChI,EAAWyB,cACXC,EAAWC,cACTzJ,EAAMC,YAAe,CAAC,SAAtBD,EACFuH,EAAOrH,aAAY,SAACxC,GAAD,OACzBA,EAAM6J,KAAKb,MAAMT,MAAK,SAAAsB,GAAI,OAAIA,EAAK7I,MAAQc,CAAjB,GADD,IAGnBuQ,EAAiB7P,aAAY,SAAAxC,GAAK,OAAI4B,EAAqB5B,EAAO8B,EAAhC,IATvB,EAUWgC,mBAAS,CAAC,GAVrB,mBAUVwO,EAVU,KAUFC,EAVE,OAWSzO,mBAAS,MAXlB,mBAWT0O,EAXS,KAWHC,EAXG,KAYX1O,EAASF,IAET6O,EAAe,SAACpG,GACpBiG,GAAU,SAAAzC,GAAI,oCACTA,GADS,mBAEXxD,EAAEM,OAAOnN,KAAO6M,EAAEM,OAAOC,OAFd,GAIf,EA0DD,OACE,sBAAK1K,UAAU,OAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,sBAAMA,UAAU,mBAAhB,gBAAoC0H,QAApC,IAAoCA,OAApC,EAAoCA,EAAMmF,WAC1C,sBAAM7M,UAAU,oBAAhB,gBAAqC0H,QAArC,IAAqCA,OAArC,EAAqCA,EAAMoF,QAC3C,sBAAM9M,UAAU,oBAAhB,SAAqCmN,YAAM,OAACzF,QAAD,IAACA,OAAD,EAACA,EAAMtJ,UAAWwD,QAE/D,oBAAI5B,UAAU,YAAd,SAA2BG,EAAE,eAC7B,cAAC,IAAD,CAAML,GAAG,WAAT,SACE,wBAAQE,UAAU,gBAAlB,SAAmCG,EAAE,uBAGzC,sBAAKH,UAAU,gBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBACE4K,KAAS,OAAJlD,QAAI,IAAJA,OAAA,EAAAA,EAAMkF,KAAMlF,EAAKkF,IAAM,2GAC5B/B,IAAI,GACJ7K,UAAU,gBAEZ,sBAAKA,UAAU,mBAAf,UACE,sBAAMA,UAAU,mBAAhB,UAAwC,OAAJ0H,QAAI,IAAJA,OAAA,EAAAA,EAAMmF,UAAWnF,EAAKmF,SAAW1M,EAAE,aACvE,sBAAMH,UAAU,oBAAhB,UAAyC,OAAJ0H,QAAI,IAAJA,OAAA,EAAAA,EAAMqD,OAAQrD,EAAKqD,MAAQ5K,EAAE,mBAGtE,sBAAKH,UAAU,iBAAf,UACE,sBAAMA,UAAU,gBAAhB,SAAiCG,EAAE,oBACnC,sBAAKH,UAAU,eAAf,UACE,cAACa,EAAA,EAAD,CAAcb,UAAU,iBACxB,sBAAMA,UAAU,oBAAhB,UAAyC,OAAJ0H,QAAI,IAAJA,OAAA,EAAAA,EAAMmF,UAAWnF,EAAKmF,SAAW1M,EAAE,gBAE1E,sBAAKH,UAAU,eAAf,UACE,cAACwQ,GAAA,EAAD,CAAexQ,UAAU,iBACzB,sBAAMA,UAAU,oBAAhB,UAAyC,OAAJ0H,QAAI,IAAJA,OAAA,EAAAA,EAAM+I,KAAM/I,EAAK+I,IAAMtQ,EAAE,iBAEhE,sBAAMH,UAAU,gBAAhB,SAAiCG,EAAE,oBACnC,sBAAKH,UAAU,eAAf,UACE,cAAC0Q,GAAA,EAAD,CAAc1Q,UAAU,iBACxB,sBAAMA,UAAU,oBAAhB,UAAyC,OAAJ0H,QAAI,IAAJA,OAAA,EAAAA,EAAMiJ,OAAQjJ,EAAKiJ,MAAQxQ,EAAE,cAEpE,sBAAKH,UAAU,eAAf,UACE,cAACiB,EAAA,EAAD,CAAajB,UAAU,iBACvB,sBAAMA,UAAU,oBAAhB,UAAyC,OAAJ0H,QAAI,IAAJA,OAAA,EAAAA,EAAMoF,OAAQpF,EAAKoF,MAAQ3M,EAAE,cAEpE,sBAAKH,UAAU,eAAf,UACE,cAAC4Q,GAAA,EAAD,CAAmB5Q,UAAU,iBAC7B,sBAAMA,UAAU,oBAAhB,UAAyC,OAAJ0H,QAAI,IAAJA,OAAA,EAAAA,EAAMmJ,SAAUnJ,EAAKmJ,QAAU1Q,EAAE,sBAI5E,sBAAKH,UAAU,aAAf,UACE,sBAAMA,UAAU,kBAAhB,SAAmCG,EAAE,UACrC,uBAAMH,UAAU,iBAAhB,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,gCAAQG,EAAE,cACV,uBACEuL,KAAK,OACLpO,KAAK,WACLwT,aAAiB,OAAJpJ,QAAI,IAAJA,OAAA,EAAAA,EAAMmF,UAAWnF,EAAKmF,SAAW1M,EAAE,WAChDH,UAAU,kBACVwK,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,OAGd,sBAAKnK,UAAU,iBAAf,UACE,gCAAQG,EAAE,cACV,uBACEuL,KAAK,OACLpO,KAAK,WACLwT,aAAiB,OAAJpJ,QAAI,IAAJA,OAAA,EAAAA,EAAMqJ,UAAWrJ,EAAKqJ,SAAW5Q,EAAE,YAChDH,UAAU,kBACVwK,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,OAGd,sBAAKnK,UAAU,iBAAf,UACE,gCAAQG,EAAE,WACV,uBACEuL,KAAK,OACLpO,KAAK,QACLwT,aAAiB,OAAJpJ,QAAI,IAAJA,OAAA,EAAAA,EAAMoF,OAAQpF,EAAKoF,MAAQ3M,EAAE,SAC1CH,UAAU,kBACVwK,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,OAGd,sBAAKnK,UAAU,iBAAf,UACE,gCAAQG,EAAE,WACV,uBACEuL,KAAK,OACLpO,KAAK,QACLwT,aAAiB,OAAJpJ,QAAI,IAAJA,OAAA,EAAAA,EAAMiJ,OAAQjJ,EAAKiJ,MAAQxQ,EAAE,SAC1CH,UAAU,kBACVwK,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,OAGd,sBAAKnK,UAAU,iBAAf,UACE,gCAAQG,EAAE,cACV,uBACEuL,KAAK,OACLpO,KAAK,MACLwT,aAAiB,OAAJpJ,QAAI,IAAJA,OAAA,EAAAA,EAAM+I,KAAM/I,EAAK+I,IAAMtQ,EAAE,YACtCH,UAAU,kBACVwK,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,OAGd,sBAAKnK,UAAU,iBAAf,UACE,gCAAQG,EAAE,aACV,uBACEuL,KAAK,OACLpO,KAAK,UACLwT,aAAiB,OAAJpJ,QAAI,IAAJA,OAAA,EAAAA,EAAMmJ,SAAUnJ,EAAKmJ,QAAU1Q,EAAE,WAC9CH,UAAU,kBACVwK,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,UAIhB,sBAAKnK,UAAU,kBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,qBACEA,UAAU,gBACV4K,KAAS,OAAJlD,QAAI,IAAJA,OAAA,EAAAA,EAAMkF,KAAMlF,EAAKkF,IAAM,2GAC5B/B,IAAI,KAEN,uBAAOmG,QAAQ,OAAf,SACE,cAACC,GAAA,EAAD,CAASjR,UAAU,qBAErB,uBAAO0L,KAAK,OAAOjN,GAAG,OAAOuL,MAAO,CAAEkH,QAAS,QAAU1G,SAAU,SAAAL,GAAC,OAAImG,EAAQnG,EAAEM,OAAO0G,MAAM,GAA3B,OAEtE,wBAAQnR,UAAU,mBAAmBkK,QAxLxB,SAACC,GAExB,GADAA,EAAEC,iBACEiG,EAAM,CACR,IAAMe,GAAW,IAAIzN,MAAOI,UAAYsM,EAAK/S,KACvC+T,EAAUC,aAAWhC,IACrBiC,EAAaC,aAAIH,EAASD,GAC1BK,EAAaC,aAAqBH,EAAYlB,GAMpDoB,EAAWE,GAAG,iBACd,SAACC,GAGC,IAAMC,EAAYD,EAASE,iBAAmBF,EAASG,WAAc,IAErE,OADA3N,QAAQgE,IAAI,aAAeyJ,EAAW,UAC9BD,EAAS/T,OACjB,IAAK,SACDuG,QAAQgE,IAAI,oBACZ,MACJ,IAAK,UACDhE,QAAQgE,IAAI,qBAIjB,IACD,SAAC1K,GAEA,IACD,WAGIsU,aAAeP,EAAWG,SAASJ,KAAKS,MAAK,SAACC,GAC1C,IAAMC,EAAY,0CACXzK,GACAyI,GAFW,IAGdvD,IAAKsF,IAETjJ,GAAWtJ,EAAQwS,EAAclK,EACpC,GACJ,GACD0B,EAAS,WAEV,KAAM,CACL,IAAMwI,EAAY,6BACbzK,GACAyI,GAELlH,GAAWtJ,EAAQwS,EAAclK,GACjC0B,EAAS,UACV,CACF,EAmIW,SAAiExJ,EAAE,8BAK3E,sBAAKH,UAAU,oBAAf,UACE,6BAAKG,EAAE,mBACP,oBAAIH,UAAU,oBAAd,SACGkQ,EAAevD,KAAI,SAAA/N,GAAO,OACzB,6BACE,eAAC,IAAD,CACEkB,GAAE,mBAAclB,EAAQC,KACxBmB,UAAU,mBAFZ,UAIGpB,EAAQwT,QAJX,IAIoB,4BAAIjF,YAAM,OAACvO,QAAD,IAACA,OAAD,EAACA,EAASR,UAAWwD,SAL5ChD,EAAQC,IADQ,WAcpC,E,mBC9Oc,SAASwT,KAAW,IAAD,EACJ1Q,mBAAS,CAAC,GADN,mBACzBwO,EADyB,KACjBC,EADiB,OAENzO,mBAAS,MAFH,mBAExB0O,EAFwB,KAElBC,EAFkB,KAGxBnQ,EAAMC,YAAe,CAAC,YAAtBD,EAHwB,EAI0BmS,eAAlD/Q,EAJwB,EAIxBA,SAAUgR,EAJc,EAIdA,aAA2BC,EAJb,EAIAC,UAAaD,OACvC7I,EAAWC,cAEX2G,EAAe,SAACpG,GACpBA,EAAEC,iBACFgG,GAAU,SAAAzC,GAAI,oCACTA,GADS,mBAEXxD,EAAEM,OAAOnN,KAAO6M,EAAEM,OAAOC,OAFd,GAIf,EAEKgI,EAAgB,uCAAG,WAAOvI,GAAP,uBAAAjM,EAAA,6DACvBiM,EAAEC,iBAEEiG,GACIe,GAAW,IAAIzN,MAAOI,UAAYsM,EAAK/S,KACvC+T,EAAUC,aAAWhC,IACrBiC,EAAaC,aAAIH,EAASD,IAC1BK,EAAaC,aAAqBH,EAAYlB,IAMzCsB,GAAG,iBACZ,SAACC,GAGC,IAAMC,EAAYD,EAASE,iBAAmBF,EAASG,WAAc,IAErE,OADA3N,QAAQgE,IAAI,aAAeyJ,EAAW,UAC9BD,EAAS/T,OACf,IAAK,SACHuG,QAAQgE,IAAI,oBACZ,MACF,IAAK,UACHhE,QAAQgE,IAAI,qBAIjB,IACD,SAAC1K,GAEA,IACD,WAGEsU,aAAeP,EAAWG,SAASJ,KAAKS,MAAK,SAACC,GAC5CxK,EAAI,6BAAQyI,GAAR,IAAgBvD,IAAKsF,GAC1B,GACF,KAGDxK,EAAI,gBAAQyI,GAzCO,kBA4Cf3N,GAAY0F,KAAK,iBAAkBR,GA5CpB,OA6CrB0I,EAAU,CAAC,GACXzG,EAAS,SA9CY,kDAgDrBvF,QAAQgE,IAAR,MAhDqB,0DAAH,sDAoDtB,OACE,sBAAKpI,UAAU,UAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BG,EAAE,WAChC,uBAAMH,UAAU,cAAc2S,SAAUJ,EAAaG,GAArD,UACE,sBAAK1S,UAAU,cAAf,UACE,gCAAQG,EAAE,WACV,uBAAOuL,KAAK,OAAOjN,GAAG,OAAO+L,SAAU,SAAAL,GAAC,OAAImG,EAAQnG,EAAEM,OAAO0G,MAAM,GAA3B,OAE1C,sBAAKnR,UAAU,cAAf,UACE,gCAAQG,EAAE,cACV,mDACMoB,EAAS,WAAY,CAAEqR,UAAW,MADxC,IAEElH,KAAK,OACLpO,KAAK,WACLwT,YAAa3Q,EAAE,mBACfqK,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,KAEXqI,EAAO3F,UAAY,mBAAG7C,MAAO,CAAEoF,MAAO,OAAnB,SAA6BjP,EAAE,uBAErD,sBAAKH,UAAU,cAAf,UACE,gCAAQG,EAAE,cACV,mDACMoB,EAAS,WAAY,CAAEqR,UAAW,OADxC,IAEElH,KAAK,OACLpO,KAAK,WACLwT,YAAa3Q,EAAE,uBACfqK,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,KAEXqI,EAAOzB,UAAY,mBAAG/G,MAAO,CAAEoF,MAAO,OAAnB,SAA6BjP,EAAE,uBAErD,sBAAKH,UAAU,cAAf,UACE,gCAAQG,EAAE,WACV,mDACMoB,EAAS,QACb,CACIsR,SAAU,mBACVC,QAAS,2JAJf,IAMEpH,KAAK,QACLpO,KAAK,QACLwT,YAAa3Q,EAAE,oBACfqK,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,KAEXqI,EAAO1F,OAAS,mBAAG9C,MAAO,CAAEoF,MAAO,OAAnB,SAA6BjP,EAAE,oBAElD,sBAAKH,UAAU,cAAf,UACE,gCAAQG,EAAE,cACV,mDACMoB,EAAS,WAAY,CACrBsR,SAAU,mBACVC,QAAS,6CAHf,IAKEpH,KAAK,WACLpO,KAAK,WACLwT,YAAa3Q,EAAE,YACfqK,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,KAEXqI,EAAOO,UAAY,mBAAG/I,MAAO,CAAEoF,MAAO,OAAnB,SAA6BjP,EAAE,uBAErD,sBAAKH,UAAU,cAAf,UACE,gCAAQG,EAAE,WACV,uBACEuL,KAAK,OACLoF,YAAa3Q,EAAE,yBAGnB,sBAAKH,UAAU,cAAf,UACE,gCAAQG,EAAE,qBACV,mDACMoB,EAAS,kBAAmB,CAC5BsR,SAAU,mBACVC,QAAS,6CAHf,IAKEpH,KAAK,WACLpO,KAAK,kBACLwT,YAAa3Q,EAAE,gCACfqK,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,KAEXgG,EAAO4C,WAAa5C,EAAO6C,gBACxB7C,EAAO4C,UAAY,qBAAK/I,MAAO,CAAEoF,MAAO,SAArB,SAAiCjP,EAAE,qBACtDgQ,EAAO6C,iBAAmB,qBAAKhJ,MAAO,CAAEoF,MAAO,OAArB,SAA+BjP,EAAE,4BAEjE,sBAAKH,UAAU,cAAf,UACE,gCAAQG,EAAE,aACV,mDACMoB,EAAS,UAAW,CAAEqR,UAAW,OADvC,IAEElH,KAAK,OACLpO,KAAK,UACLwT,YAAa3Q,EAAE,sBACfqK,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,KAEXqI,EAAO3B,SAAW,mBAAG7G,MAAO,CAAEoF,MAAO,OAAnB,SAA6BjP,EAAE,sBAEpD,sBAAKH,UAAU,cAAf,UACE,gCAAQG,EAAE,YACV,sBAAKH,UAAU,gBAAf,UACE,uBAAO0L,KAAK,QAAQpO,KAAK,SAASmB,GAAG,OAAOiM,MAAM,OAAOF,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,IACnE,uBAAO8I,IAAI,OAAX,SAAmB9S,EAAE,UACrB,uBAAOuL,KAAK,QAAQpO,KAAK,SAASmB,GAAG,SAASiM,MAAM,SAASF,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,IACvE,uBAAO8I,IAAI,SAAX,SAAqB9S,EAAE,YACvB,uBAAOuL,KAAK,QAAQpO,KAAK,SAASmB,GAAG,QAAQiM,MAAM,QAAQF,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,IACrE,uBAAO8I,IAAI,QAAX,SAAoB9S,EAAE,iBAG1B,sBAAKH,UAAU,cAAf,UACE,gCAAQG,EAAE,YACV,yBAAQH,UAAU,gBAAgB1C,KAAK,SAASmB,GAAG,SAAS+L,SAAU,SAACL,GAAD,OAAOoG,EAAapG,EAApB,EAAwB+I,aAAa,MAA3G,UACE,wBAAQxI,MAAM,MAAd,SAAqBvK,EAAE,SACvB,wBAAQuK,MAAM,KAAd,SAAoBvK,EAAE,cAG1B,wBAAQH,UAAU,gBAAgB0L,KAAK,SAAvC,SAAiDvL,EAAE,iBAI1D,C,OChLc,SAASgT,KACtB,IAAMlL,EAAWyB,cACXhE,EAAWrF,aAAY,SAAAxC,GAAK,OAAIA,EAAMwI,QAAQX,QAAlB,IAFE,EAGU/D,mBAAS,IAHnB,mBAG7ByR,EAH6B,KAGZC,EAHY,OAIgB1R,mBAAS,IAJzB,mBAI7B2R,EAJ6B,KAITC,EAJS,OAKY5R,oBAAS,GALrB,mBAK7BsM,EAL6B,KAKXC,EALW,KAM5B/N,EAAMC,YAAe,CAAC,gBAAtBD,EAEFgO,EAAU,CACd,CAAEC,MAAO,MAAOC,WAAY,KAAMlD,MAAO,KACzC,CACEiD,MAAO,UACPC,WAAYlO,EAAE,WACdgL,MAAO,IACPmD,WAAY,SAACC,GACX,OACE,sBAAKvO,UAAU,kBAAf,UACE,qBAAKA,UAAU,iBAAiB4K,IAAK2D,EAAOC,IAAI5B,IAAK/B,IAAI,KACxD1K,EAAEoO,EAAOC,IAAIzD,SAGnB,GAEH,CACEqD,MAAO,UACPC,WAAYlO,EAAE,SACdgL,MAAO,IACPmD,WAAY,SAACC,GACX,OACE,qBAAKvO,UAAU,kBAAf,SACGG,EAAEoO,EAAOC,IAAIgF,UAGnB,GAEH,CACEpF,MAAO,QACPC,WAAYlO,EAAE,SACdgL,MAAO,KAET,CACEiD,MAAO,SACPC,WAAYlO,EAAE,UACdgL,MAAO,IACPmD,WAAY,SAACC,GACX,OACE,qCACE,cAAC,IAAD,CAAMzO,GAAI,YAAcyO,EAAOC,IAAI3P,IAAnC,SACE,wBAAQmB,UAAU,kBAAlB,SAAqCG,EAAE,YAEzC,cAACsO,GAAA,EAAD,CACEzO,UAAU,oBACVkK,QAAS,WACPmJ,EAAmB9E,EAAOC,IAAI3P,KAC9B0U,EAAsBhF,EAAOC,IAAIzD,OACjCmD,GAAoB,EACrB,MAIR,IAIL,OACE,sBAAKlO,UAAU,cAAf,UACE,cAAC,IAAD,CAAMF,GAAG,cAAT,SACE,wBAAQE,UAAU,eAAlB,SAAkCG,EAAE,wBAEtC,cAAC,KAAD,CACEuO,KAAMhJ,EACNiJ,yBAAuB,EACvBR,QAASA,EACTS,SAAU,SAACJ,GAAD,OAASA,EAAI3P,GAAb,EACVgQ,SAAU,EACVC,mBAAiB,IAEnB,eAACC,GAAA,EAAD,CACEC,KAAMf,EACNgB,QAAS,kBAAMf,GAAoB,EAA1B,EACT,kBAAgB,qBAChB,mBAAiB,2BACjBuF,WAAY,CACVzJ,MAAO,CACL0J,OAAQ,oBACRC,aAAc,GACdC,gBAAiB,UACjBC,eAAgB,SAChBC,UAAW,WAXjB,UAeE,eAAC5E,GAAA,EAAD,WAAc/O,EAAE,sBAAhB,IAAwCiT,EAAxC,KAA2DE,EAA3D,QACA,eAACnE,GAAA,EAAD,WACE,cAAC,KAAD,CACEjF,QAAS,kBAAMgE,GAAoB,EAA1B,EACTkB,MAAM,UACN2E,QAAQ,WAHV,SAKG5T,EAAE,YAEL,cAAC,KAAD,CAAQ+J,QAAS,WACbvB,GAAcyK,EAAiBnL,GAC/BiG,GAAoB,EACrB,EACDkB,MAAM,YACNC,WAAS,EACT0E,QAAQ,WANV,SAQG5T,EAAE,oBAMd,C,WC0Gc6T,GAhOC,WACZ,IAAMC,EAAWlE,cACXpG,EAAWC,cACXsK,EAAYD,EAASjE,SAASC,MAAM,KAAK,GACzC5J,EAAUhG,aAAY,SAACxC,GAAD,OACxBA,EAAMwI,QAAQX,SAASU,MAAK,SAAAC,GAAO,OAAIA,EAAQxH,MAAQqV,CAApB,GADX,IAGtBzW,EAAa4C,aAAY,SAACxC,GAAD,OAC3BA,EAAMwI,QAAQ5I,UADa,IAPb,EAWUkE,mBAAS,IAXnB,mBAWXwS,EAXW,KAWHC,EAXG,OAYkBzS,mBAAS,IAZ3B,mBAYX0S,EAZW,KAYCC,EAZD,OAaU3S,mBAAS,CAAC,GAbpB,mBAaXwO,EAbW,KAaHC,EAbG,OAcQzO,mBAAS,MAdjB,mBAcV0O,EAdU,KAcJC,EAdI,OAeM3O,mBAAS,IAff,mBAeV4S,EAfU,KAeLC,EAfK,OAgBU7S,mBAAS,IAhBnB,mBAgBVyN,EAhBU,KAgBHqF,EAhBG,KAiBZxM,EAAWyB,cACTvJ,EAAMC,YAAe,CAAC,YAAtBD,EAEFsN,EAASC,mBACX,iBAAM,CACF,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAZJ,GAcA,IAGJzL,qBAAU,WACN,IAAIkK,GAAS,EAqBb,OApBA,sBAAC,8BAAAjO,EAAA,+EAEyBsE,GAAYkG,IAAI,qBAAuBwL,GAFhE,OAEajQ,EAFb,OAGayQ,EAAOzQ,EAAIC,KAAKjG,MAAK,SAACC,EAAEC,GAC1B,OAAOD,EAAEW,IAAMV,EAAEU,GACpB,IACDuV,EAAU,IACVE,EAAc,KACbnI,GAAUuI,EAAK/H,KAAI,SAAC5H,GAAD,OAChBqP,GAAU,SAACzG,GAAD,6BACHA,GADG,CAEN,CAAErQ,KAAMmQ,EAAO1I,EAAKlG,IAAM,GAAI8V,MAAO5P,EAAKqH,QAFpC,GADM,KAMnBD,GAAUmI,EAAcI,EAAKE,QAAO,SAACC,EAAD,UAAoBA,EAApB,EAAQzI,KAAR,GAAiC,IAd7E,kDAgBOhI,QAAQgE,IAAR,MAhBP,yDAAD,GAoBO,kBAAM+D,GAAS,CAAf,CACV,GAAE,CAAC+H,EAAWzG,IAEf,IAAM8C,EAAe,SAACpG,GAClBiG,GAAU,SAAAzC,GACN,OAAO,6BAAIA,GAAX,mBAAkBxD,EAAEM,OAAOnN,KAAO6M,EAAEM,OAAOC,OAC9C,GACJ,EAEKoK,EAAa,SAAC3K,GAChBiG,GAAU,SAAAzC,GACN,OAAO,6BACAA,GADP,mBAEMxD,EAAEM,OAAOnN,KAAMyX,MAAM,EAAE,GAF7B,6BAGW5E,EAAQhG,EAAEM,OAAOnN,KAAMyX,MAAM,EAAE,KAH1C,mBAIU5K,EAAEM,OAAOnN,KAAMyX,OAAO,GAAK5K,EAAEM,OAAOC,SAGjD,GACJ,EAUKsK,EAA0B,IAAfT,EAAI/T,OAAJ,OAAmB6F,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAS4O,WAAaV,EACpDW,EAA0B,IAAjB9F,EAAM5O,OAAN,OAAqB6F,QAArB,IAAqBA,OAArB,EAAqBA,EAAS+I,MAAQA,EA8DvD,OACE,sBAAKpP,UAAU,UAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BG,EAAE,aAChC,cAAC,IAAD,CAAML,GAAG,cAAT,SACE,wBAAQE,UAAU,mBAAlB,SAAsCG,EAAE,iBAG5C,sBAAKH,UAAU,aAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,cAAC,GAAD,CAAOkE,KAAMiQ,EAAQnJ,QAAQ,QAAQD,MAAO5K,EAAE,yBAElD,sBAAKH,UAAU,kBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAK4K,IAAG,OAAEvE,QAAF,IAAEA,OAAF,EAAEA,EAASuG,IAAK/B,IAAI,GAAG7K,UAAU,mBACzC,sBAAMA,UAAU,cAAhB,SAA+BG,EAAC,OAACkG,QAAD,IAACA,OAAD,EAACA,EAAS0E,YAE9C,sBAAK/K,UAAU,oBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,sBAAMA,UAAU,iBAAhB,iBACA,sBAAMA,UAAU,mBAAhB,gBAAoCqG,QAApC,IAAoCA,OAApC,EAAoCA,EAASxH,SAEjD,sBAAKmB,UAAU,kBAAf,UACI,sBAAMA,UAAU,iBAAhB,SAAkCG,EAAE,WACpC,sBAAMH,UAAU,mBAAhB,SAAoCqU,OAExC,sBAAKrU,UAAU,kBAAf,UACI,sBAAMA,UAAU,iBAAhB,SAAkCG,EAAE,aACpC,sBAAMH,UAAU,mBAAhB,UAA2C,OAAPqG,QAAO,IAAPA,OAAA,EAAAA,EAASmN,SAAUrT,EAAE,QAAUA,EAAE,uBAKrF,qBAAKH,UAAU,gBAAf,SACI,uBAAMA,UAAU,cAAhB,UACI,sBAAKA,UAAU,kBAAf,UACI,gCAAQG,EAAE,iBACV,uBAAO7C,KAAK,QAAQoO,KAAK,OAAOwH,aAAc/S,EAAC,OAACkG,QAAD,IAACA,OAAD,EAACA,EAAS0E,OAAQP,SAAU+F,IAC3E,kCAAQpQ,EAAE,eAAV,SACA,0BAAU7C,KAAK,UAAUoO,KAAK,OAAOwH,aAAY,OAAE7M,QAAF,IAAEA,OAAF,EAAEA,EAASC,KAAK6O,GAAI3K,SAAUsK,IAC/E,kCAAQ3U,EAAE,eAAV,SACA,0BAAU7C,KAAK,UAAUoO,KAAK,OAAOwH,aAAY,OAAE7M,QAAF,IAAEA,OAAF,EAAEA,EAASC,KAAK8O,GAAI5K,SAAUsK,IAC/E,kCAAQ3U,EAAE,eAAV,SACA,0BAAU7C,KAAK,UAAUoO,KAAK,OAAOwH,aAAY,OAAE7M,QAAF,IAAEA,OAAF,EAAEA,EAASC,KAAK+O,GAAI7K,SAAUsK,IAC/E,gCAAQ3U,EAAE,WACV,uBAAO7C,KAAK,QAAQoO,KAAK,OAAOwH,aAAY,OAAE7M,QAAF,IAAEA,OAAF,EAAEA,EAASiP,MAAO9K,SAAU+F,IACxE,gCAAQpQ,EAAE,WACV,uBAAOuL,KAAK,OAAOwH,aAAY,OAAE7M,QAAF,IAAEA,OAAF,EAAEA,EAAS+I,MAAO5E,SAlH3C,SAACL,GACjBsK,EAAStK,EAAEM,OAAOC,MAAMuF,MAAM,KACjC,IAiHa,gCAAQ9P,EAAE,gBACV,uBAAOuL,KAAK,OAAOwH,aAAY,OAAE7M,QAAF,IAAEA,OAAF,EAAEA,EAAS4O,WAAYzK,SAxHlD,SAACL,GACfqK,EAAOrK,EAAEM,OAAOC,MAAMuF,MAAM,KAC/B,IAuHa,gCAAQ9P,EAAE,aACV,yBAAQ7C,KAAK,UAAUmB,GAAG,UAAU+L,SAAU+F,EAA9C,UACI,wBAAQ7F,MAAM,OAAd,SAAsBvK,EAAE,UACxB,wBAAQuK,MAAM,QAAd,SAAuBvK,EAAE,iBAGjC,sBAAKH,UAAU,mBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBAAK4K,IAAG,OAAEvE,QAAF,IAAEA,OAAF,EAAEA,EAASuG,IAAK/B,IAAI,GAAG7K,UAAU,qBACzC,uBAAOgR,QAAQ,OAAf,SACI,cAACC,GAAA,EAAD,CAASjR,UAAU,cAEvB,uBAAO0L,KAAK,OAAOjN,GAAG,OAAOuL,MAAO,CAACkH,QAAQ,QAAS1G,SAAU,SAAAL,GAAC,OAAImG,EAAQnG,EAAEM,OAAO0G,MAAM,GAA3B,OAErE,wBAAQnR,UAAU,gBAAgBkK,QAAS,SAACC,GAAD,OA5HrC,SAACA,GAEjB,GADAA,EAAEC,iBACEiG,EAAM,CACN,IAAMe,GAAW,IAAIzN,MAAOI,UAAYsM,EAAK/S,KACvC+T,EAAUC,aAAWhC,IACrBiC,EAAaC,aAAIH,EAASD,GAC1BK,EAAaC,aAAqBH,EAAYlB,GAMpDoB,EAAWE,GAAG,iBACd,SAACC,GAGG,IAAMC,EAAYD,EAASE,iBAAmBF,EAASG,WAAc,IAErE,OADA3N,QAAQgE,IAAI,aAAeyJ,EAAW,UAC9BD,EAAS/T,OACjB,IAAK,SACDuG,QAAQgE,IAAI,oBACZ,MACJ,IAAK,UACDhE,QAAQgE,IAAI,qBAInB,IACD,SAAC1K,GAEA,IACD,WAGIsU,aAAeP,EAAWG,SAASJ,KAAKS,MAAK,SAACC,GAC1C,IAAMqD,EAAe,6BACdpF,GADc,IAEjBzE,KAAMyE,EAAOpF,MACb6B,IAAKsF,EACL+C,WAAYD,EACZ5F,MAAO8F,IAEXrM,GAAcqL,EAAWqB,EAAiBtN,EAC7C,GACJ,GACD0B,EAAS,cAEZ,KAAM,CACL,IAAM4L,EAAe,6BAChBpF,GADgB,IAEnBzE,KAAMyE,EAAOpF,MACb6B,IAAKvG,EAAQuG,IACbqI,WAAYD,EACZ5F,MAAO8F,IAETrM,GAAcqL,EAAWqB,EAAiBtN,GAC1C0B,EAAS,aACV,CACJ,CAkE+DU,CAAYF,EAAG9D,EAAQxH,IAA9B,EAA6C2W,SAAU/X,EAAlG,SAA+G0C,EAAE,sBAMlI,E,OCjOc,SAASsV,KAAc,IAAD,EACL9T,mBAAS,CAAC,GADL,mBAC3BwO,EAD2B,KACnBC,EADmB,OAETzO,mBAAS,MAFA,mBAE3B0O,EAF2B,KAErBC,EAFqB,OAGX3O,mBAAS,IAHE,mBAG3B4S,EAH2B,KAGtBC,EAHsB,OAIP7S,mBAAS,IAJF,mBAI3ByN,EAJ2B,KAIpBqF,EAJoB,KAK7BxM,EAAWyB,cACXC,EAAWC,cACTzJ,EAAMC,YAAe,CAAC,eAAtBD,EACF1C,EAAa4C,aAAY,SAAAxC,GAAK,OAAIA,EAAMwI,QAAQ5I,UAAlB,IAE9B8S,EAAe,SAACpG,GACpBiG,GAAU,SAAAzC,GACR,OAAO,6BAAIA,GAAX,mBAAkBxD,EAAEM,OAAOnN,KAAO6M,EAAEM,OAAOC,OAC5C,GACF,EAEKoK,EAAa,SAAC3K,GAChBiG,GAAU,SAAAzC,GACN,OAAO,6BACAA,GADP,mBAEMxD,EAAEM,OAAOnN,KAAMyX,MAAM,EAAE,GAF7B,6BAGW5E,EAAQhG,EAAEM,OAAOnN,KAAMyX,MAAM,EAAE,KAH1C,mBAIU5K,EAAEM,OAAOnN,KAAMyX,OAAO,GAAK5K,EAAEM,OAAOC,SAGjD,GACJ,EAUKgL,EAAU,CAACvF,EAAOpF,MAAOoF,EAAOmF,MAAOnF,EAAOqD,QAASnD,EAAMkE,EAAI/T,OAAQ4O,EAAM5O,QAAQmV,MAAMC,WAAanY,EAoDhH,OACE,sBAAKuC,UAAU,aAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCG,EAAE,gBACnC,uBAAMH,UAAU,iBAAhB,UACE,sBAAKA,UAAU,iBAAf,UACE,gCAAQG,EAAE,WACV,uBAAOuL,KAAK,OAAOjN,GAAG,OAAO+L,SAAU,SAAAL,GAAC,OAAImG,EAAQnG,EAAEM,OAAO0G,MAAM,GAA3B,OAE1C,sBAAKnR,UAAU,iBAAf,UACE,gCAAQG,EAAE,WACV,uBAAO7C,KAAK,QAAQoO,KAAK,OAAOoF,YAAY,YAAYtG,SAAU+F,OAEpE,sBAAKvQ,UAAU,iBAAf,UACE,gCAAQG,EAAE,YACV,uBAAO7C,KAAK,UAAUoO,KAAK,OAAOoF,YAAY,iBAAiBtG,SAAUsK,OAE3E,sBAAK9U,UAAU,iBAAf,UACE,gCAAQG,EAAE,YACV,uBAAO7C,KAAK,UAAUoO,KAAK,OAAOoF,YAAY,8BAAUtG,SAAUsK,OAEpE,sBAAK9U,UAAU,iBAAf,UACE,gCAAQG,EAAE,YACV,uBAAO7C,KAAK,UAAUoO,KAAK,OAAOoF,YAAY,sDAActG,SAAUsK,OAExE,sBAAK9U,UAAU,iBAAf,UACE,gCAAQG,EAAE,WACV,uBAAO7C,KAAK,QAAQoO,KAAK,SAASoF,YAAY,SAAStG,SAAU+F,OAEnE,sBAAKvQ,UAAU,iBAAf,UACE,gCAAQG,EAAE,WACV,uBAAOuL,KAAK,OAAOoF,YAAY,aAAatG,SAtFhC,SAACL,GACnBsK,EAAStK,EAAEM,OAAOC,MAAMuF,MAAM,KAC/B,OAsFK,sBAAKjQ,UAAU,iBAAf,UACE,gCAAQG,EAAE,gBACV,uBAAOuL,KAAK,OAAOoF,YAAY,mBAAmBtG,SA9FxC,SAACL,GACjBqK,EAAOrK,EAAEM,OAAOC,MAAMuF,MAAM,KAC7B,OA8FK,sBAAKjQ,UAAU,iBAAf,UACE,gCAAQG,EAAE,WACV,yBAAQ7C,KAAK,UAAUkN,SAAU+F,EAAjC,UACE,wBAAQ7F,MAAM,OAAd,iBACA,wBAAQA,MAAM,QAAd,sBAGJ,wBACER,QA9FY,SAACC,GACnB,GAAIuL,EAEF,GADAvL,EAAEC,iBACEiG,EAAM,CACR,IAAMe,GAAW,IAAIzN,MAAOI,UAAYsM,EAAK/S,KACvC+T,EAAUC,aAAWhC,IACrBiC,EAAaC,aAAIH,EAASD,GAC1BK,EAAaC,aAAqBH,EAAYlB,GAMpDoB,EAAWE,GAAG,iBACd,SAACC,GAGC,IAAMC,EAAYD,EAASE,iBAAmBF,EAASG,WAAc,IAErE,OADA3N,QAAQgE,IAAI,aAAeyJ,EAAW,UAC9BD,EAAS/T,OACf,IAAK,SACHuG,QAAQgE,IAAI,oBACZ,MACA,IAAK,UACHhE,QAAQgE,IAAI,qBAIb,IACD,SAAC1K,GAEA,IACD,WAGEsU,aAAeP,EAAWG,SAASJ,KAAKS,MAAK,SAACC,GAC5C,IAAM7L,EAAO,6BAAQ8J,GAAR,IAAgBzE,KAAMyE,EAAOpF,MAAO6B,IAAKsF,EAAa+C,WAAYV,EAAKnF,UACpFtG,GAAWzC,EAAS4B,EACrB,GACF,GACD0B,EAAS,cAEhB,KAAM,CACL,IAAMtD,EAAO,6BAAQ8J,GAAR,IAAgBzE,KAAMyE,EAAOpF,MAAO6B,IAAK,GAAIqI,WAAYV,EAAKnF,UAC3EtG,GAAWzC,EAAS4B,GACpB0B,EAAS,aACV,CAEJ,EA+CO3J,UAAU,mBACVwV,UAAWE,EAHb,SAKGvV,EAAE,iBAKZ,CChJD,IA6De0V,GA7DD,WAAO,IAAD,EACgBlU,mBAAS,IADzB,mBACTkL,EADS,KACCiJ,EADD,OAEgBnU,mBAAS,IAFzB,mBAEToR,EAFS,KAECgD,EAFD,KAGV9N,EAAWyB,cAHD,EAI2BrJ,aAAY,SAACxC,GAAD,OAAWA,EAAM6J,IAAjB,IAA/Cd,EAJQ,EAIRA,YAAanJ,EAJL,EAIKA,WAAYC,EAJjB,EAIiBA,MACzByC,EAAMC,YAAe,CAAC,UAAtBD,EAEFkK,EAAW,uCAAG,WAAOF,GAAP,SAAAjM,EAAA,6DAClBiM,EAAEC,iBADgB,kBAGVpC,GAAMC,EAAU,CAAE4E,WAAUkG,aAHlB,sDAKhB3O,QAAQgE,IAAR,MALgB,wDAAH,sDASnB,OACE,sBACE4B,MAAO,CACLgM,OAAQ,QACR7K,MAAO,QACP+F,QAAS,OACT+E,cAAe,SACfC,WAAY,SACZrC,eAAgB,UAPpB,UAUE,uBACE7J,MAAO,CACLmM,QAAS,OACTC,aAAc,QAEhB1K,KAAK,OACLoF,YAAY,WACZtG,SAAU,SAAAL,GAAC,OAAE2L,EAAY3L,EAAEM,OAAOC,MAAvB,IAEb,uBACEV,MAAO,CACLmM,QAAS,OACTC,aAAc,QAEhB1K,KAAK,WACLoF,YAAY,WACZtG,SAAU,SAAAL,GAAC,OAAE4L,EAAY5L,EAAEM,OAAOC,MAAvB,IAEb,wBACEV,MAAO,CACLmM,QAAS,GACThL,MAAO,SAETjB,QAASG,EACTmL,SAAU/X,EANZ,SAQG0C,EAAE,WAEJzC,GAAS,mBAAGsM,MAAO,CAAEoF,MAAO,OAAnB,SAA6BjP,EAAE,YACvCzC,GAASkJ,GAAe,cAAC,IAAD,CAAU9G,GAAG,QAG5C,ECRc6U,I,OAjDD,WAAO,IAAD,EACkBhT,mBAAS,IAD3B,mBACX0U,EADW,KACCC,EADD,KAGZ7I,EAASC,mBACb,iBAAM,CACJ,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MAZF,GAcA,IAmBF,OAhBAzL,qBAAU,WACR,sBAAC,sBAAA/D,EAAA,+EAEqBsE,GAAYkG,IAAI,kBAFrC,cAGOxE,KAAKyI,KAAI,SAAA5H,GAAI,OACfuR,GAAc,SAAA3I,GAAI,6BACbA,GADa,CAEhB,CAACrQ,KAAKmQ,EAAO1I,EAAKlG,IAAI,GAAI,MAASkG,EAAKqH,QAFxB,GADH,IAHpB,gDAUGhI,QAAQgE,IAAR,MAVH,wDAAD,EAaD,GAAE,CAACqF,IAGF,sBAAKzN,UAAU,QAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAOkE,KAAMmS,EAAYtL,MAAM,QAAQE,MAAI,EAACD,QAAQ,UACpD,sBAAKhL,UAAU,eAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,SAIP,GC8FcuW,I,OApIG,WAChB,IAAMtO,EAAWyB,cACXlF,EAASnE,aAAY,SAAAxC,GAAK,OAAIA,EAAMwL,MAAM7E,MAAhB,IAFV,EAGoB7C,mBAAS,MAH7B,mBAGf6U,EAHe,KAGAC,EAHA,OAI0B9U,oBAAS,GAJnC,mBAIfsM,EAJe,KAIGC,EAJH,KAKd/N,EAAMC,YAAe,CAAC,cAAtBD,EACFyB,EAASF,IAETyM,EAAU,CACd,CAAEC,MAAO,MAAOC,WAAYlO,EAAE,MAAOgL,MAAO,KAC5C,CACEiD,MAAO,SACPC,WAAYlO,EAAE,QACdgL,MAAO,IACPmD,WAAY,SAACC,GACX,OACE,qBAAKvO,UAAU,iBAAf,SACGuO,EAAOC,IAAI7O,QAGjB,GAEH,CAAEyO,MAAO,QAASC,WAAYlO,EAAE,SAAUgL,MAAO,KACjD,CACEiD,MAAO,SACPC,WAAYlO,EAAE,UACdgL,MAAO,KAET,CACIiD,MAAO,WACPC,WAAYlO,EAAE,YACdgL,MAAO,IACPmD,WAAY,SAACC,GACT,OACI,oBAAIvO,UAAU,kBAAd,SACKuO,EAAOC,IAAI9I,SAASiH,KAAI,SAAAtG,GAAO,OAC5B,+BACKA,EAAQ0E,MADb,MAAS1E,EAAQxH,IADW,KAO3C,GAEL,CACIuP,MAAO,SACPC,WAAYlO,EAAE,UACdgL,MAAO,IACPmD,WAAY,SAACC,GACT,OACI,8BAAIA,EAAOC,IAAIpB,OAAf,SAEP,GAEL,CACIgB,MAAO,UACPC,WAAYlO,EAAE,WACdgL,MAAO,IACPmD,WAAY,SAACC,GACT,OACI,4BAAIA,EAAOC,IAAIqC,QAAQ6F,MAE9B,GAEL,CACEtI,MAAO,YACPC,WAAYlO,EAAE,aACdgL,MAAO,IACPmD,WAAY,SAACC,GACX,OACI,8BACKpB,YAAOoB,EAAOC,IAAIpQ,UAAWwD,IAGvC,GAEH,CACEwM,MAAO,SACPC,WAAYlO,EAAE,UACdgL,MAAO,IACPmD,WAAY,SAACC,GACX,OACE,qCACE,cAAC,IAAD,CAAMzO,GAAI,UAAYyO,EAAOC,IAAI3P,IAAjC,SACE,wBAAQmB,UAAU,gBAAlB,SAAmCG,EAAE,YAEvC,cAACsO,GAAA,EAAD,CACEzO,UAAU,kBACVkK,QAAS,WACPuM,EAAiBlI,EAAOC,IAAI3P,KAC5BqP,GAAoB,EACrB,MAIR,IAIL,OACE,sBAAKlO,UAAU,YAAf,UACE,cAAC,KAAD,CACE0O,KAAMlK,EACNmK,yBAAuB,EACvBR,QAASA,EACTS,SAAU,SAACJ,GAAD,OAASA,EAAI3P,GAAb,EACVgQ,SAAU,GACVC,mBAAiB,IAEnB,eAACC,GAAA,EAAD,CACEC,KAAMf,EACNgB,QAAS,kBAAMf,GAAoB,EAA1B,EACT,kBAAgB,qBAChB,mBAAiB,2BAJnB,UAME,eAACgB,GAAA,EAAD,WAAc/O,EAAE,sBAAhB,IAAwCqW,EAAxC,QACA,eAACrH,GAAA,EAAD,WACE,cAAC,KAAD,CAAQjF,QAAS,kBAAMgE,GAAoB,EAA1B,EAAkCkB,MAAM,UAAzD,SACGjP,EAAE,YAEL,cAAC,KAAD,CAAQ+J,QAAS,WACff,GAAYqN,EAAevO,GAC3BiG,GAAoB,EACrB,EAAEkB,MAAM,UAAUC,WAAS,EAH5B,SAIGlP,EAAE,oBAMd,G,8BCEcwW,I,OApID,WAAO,IAAD,UAEZC,EADW7G,cACQC,SAASC,MAAM,KAAK,GACvChI,EAAWyB,cACXL,EAAQhJ,aAAY,SAACxC,GAAD,OACxBA,EAAMwL,MAAM7E,OAAO4B,MAAK,SAAAiD,GAAK,OAAIA,EAAMxK,MAAQ+X,CAAlB,GADL,IAJR,EAQYjV,mBAAS,IARrB,mBAQV0L,EARU,KAQFwJ,EARE,KASV1W,EAAMC,YAAe,CAAC,UAAtBD,EACFyB,EAASF,IAgBf,OACE,sBAAK1B,UAAU,QAAf,UACI,wBACIA,UAAYqN,EAAyB,oBAAhB,cACrBnD,QAAS,SAACC,GAAD,OAdC,SAACA,GACnBA,EAAEC,iBACF,IAAM0M,EAAa,6BACZzN,GADY,IAEfgE,WAEJjE,GAAYwN,EAASE,EAAe7O,GACpC4O,EAAU,GACX,CAMyBxM,CAAYF,EAAnB,EAFb,SAIKhK,EAAE,YAEP,qBAAIH,UAAU,aAAd,UAA4BG,EAAE,SAA9B,IAAyCkJ,EAAMxK,OAC/C,sBAAKmB,UAAU,eAAf,UACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,YAAf,UACI,cAAC+W,GAAA,EAAD,IACA,6BAAK5W,EAAE,2BAEX,sBAAKH,UAAU,WAAf,UACI,oBAAGA,UAAU,gBAAb,UAA6B,cAACa,EAAA,EAAD,CAAcb,UAAU,iBAArD,IAAuEG,EAAE,0BACzE,4BAAIkJ,EAAM1J,YAEd,sBAAKK,UAAU,WAAf,UACI,oBAAGA,UAAU,gBAAb,UAA6B,cAACiB,EAAA,EAAD,CAAajB,UAAU,iBAApD,IAAsEG,EAAE,6BACxE,4BAAIkJ,EAAMyD,WAEd,sBAAK9M,UAAU,WAAf,UACI,oBAAGA,UAAU,gBAAb,UAA6B,cAACgX,GAAA,EAAD,CAAuBhX,UAAU,iBAA9D,IAAgFG,EAAE,+BAClF,yBACI7C,KAAK,SACL4V,aAAc7J,EAAMgE,OACpBrN,UAAWqN,EAAS,UAAYA,EAAS,UAAYhE,EAAMgE,OAC3D7C,SAAU,SAACL,GAAD,OA3CN,SAACA,GACzB0M,EAAU1M,EAAEM,OAAOC,MACpB,CAyCsCuM,CAAkB9M,EAAzB,EAJd,UAMI,wBAAQO,MAAM,WAAd,SAA0BvK,EAAE,cAC5B,wBAAQuK,MAAM,UAAd,SAAyBvK,EAAE,aAC3B,wBAAQuK,MAAM,WAAd,SAA0BvK,EAAE,cAC5B,wBAAQuK,MAAM,YAAd,SAA2BvK,EAAE,eAC7B,wBAAQuK,MAAM,UAAd,SAAyBvK,EAAE,mBAGnC,sBAAKH,UAAU,WAAf,UACI,oBAAGA,UAAU,gBAAb,UAA6B,cAACwQ,GAAA,EAAD,CAAexQ,UAAU,iBAAtD,IAAwEG,EAAE,6BAC1E,4BAAIgN,YAAO9D,EAAMjL,UAAWwD,QAEhC,sBAAK5B,UAAU,WAAf,UACI,oBAAGA,UAAU,gBAAb,UAA6B,cAACwQ,GAAA,EAAD,CAAexQ,UAAU,iBAAtD,IAAwEG,EAAE,6BAC1E,4BAAIgN,YAAO9D,EAAM6N,UAAWtV,WAGpC,sBAAK5B,UAAU,QAAf,UACI,sBAAKA,UAAU,YAAf,UACI,cAACmX,GAAA,EAAD,IACA,6BAAKhX,EAAE,sBAEX,sBAAKH,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,SAA8BG,EAAE,oBAChC,sCAAIkJ,EAAMwH,eAAV,aAAI,EAAeuG,WAEvB,sBAAKpX,UAAU,WAAf,UACI,mBAAGA,UAAU,kBACb,sCAAIqJ,EAAMwH,eAAV,aAAI,EAAewG,WAEvB,sBAAKrX,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,SAA8BG,EAAE,kBAChC,sCAAIkJ,EAAMwH,eAAV,aAAI,EAAe6F,UAEvB,sBAAK1W,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,SAA8BG,EAAE,mBAChC,sCAAIkJ,EAAMwH,eAAV,aAAI,EAAehT,WAEvB,sBAAKmC,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,SAA8BG,EAAE,sBAChC,sCAAIkJ,EAAMwH,eAAV,aAAI,EAAeyG,uBAI/B,sBAAKtX,UAAU,eAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBG,EAAE,oBACzB,wBAAOH,UAAU,gBAAjB,UACI,gCACI,qBAAIA,UAAU,YAAd,UACI,oBAAIA,UAAU,aAAd,SAA4BG,EAAE,wBAC9B,oBAAIH,UAAU,aAAd,SAA4BG,EAAE,2BAC9B,oBAAIH,UAAU,aAAd,SAA4BG,EAAE,oBAC9B,oBAAIH,UAAU,aAAd,SAA4BG,EAAE,uBAC9B,oBAAIH,UAAU,aAAd,SAA4BG,EAAE,yBAC9B,oBAAIH,UAAU,aAAd,SAA4BG,EAAE,gCAGrCkJ,EAAM3D,SAASiH,KAAI,SAACtG,GAAD,OAChB,gCACI,qBAAIrG,UAAU,YAAd,UACI,oBAAIA,UAAU,YAAd,SAA2BqG,EAAQ6N,YACnC,oBAAIlU,UAAU,YAAd,SAA2BqG,EAAQ0E,QACnC,oBAAI/K,UAAU,YAAd,SAA2BqG,EAAQ+I,QACnC,oBAAIpP,UAAU,YAAd,SAA2BqG,EAAQkR,WACnC,qBAAIvX,UAAU,YAAd,UAA2BqG,EAAQiP,MAAnC,IAA2CnV,EAAE,UAC7C,qBAAIH,UAAU,YAAd,UAA2BqG,EAAQkR,SAAWlR,EAAQiP,MAAtD,IAA8DnV,EAAE,YANrCkG,EAAQxH,MAD/BwH,EAAQxH,IADJ,OAaxB,qBAAImB,UAAU,cAAd,UAA6BG,EAAE,eAA/B,IAAgDkJ,EAAM+D,OAAtD,IAA+DjN,EAAE,eAI5E,GC3FcqX,I,OAhDK,WAChB,IAAMvP,EAAWyB,cACXlM,EAAW6C,aAAY,SAAAxC,GAAK,OAAIA,EAAMe,QAAQpB,QAAlB,IAC1B2C,EAAMC,YAAe,CAAC,gBAAtBD,EACFyB,EAASF,IAET+V,EAAmB,SAAC7Y,GACtB,IAAM8Y,EAAe,6BACd9Y,GADc,IAEjBE,MAAOF,EAAQE,OAEnByK,GAAc3K,EAAQC,IAAK6Y,EAAiBzP,EAC/C,EAEH,OACE,sBAAKjI,UAAU,oBAAf,UACI,oBAAIA,UAAU,gBAAd,SAA+BG,EAAE,WADrC,OAEK3C,QAFL,IAEKA,OAFL,EAEKA,EAAUmP,KAAI,SAAA/N,GACX,OACI,sBAAKoB,UAAU,eAAf,UACI,wBAAQA,UAAWpB,EAAQE,KAAO,WAAa,cAAeoL,QAAS,kBAAMuN,EAAiB7Y,EAAvB,IACvE,sBAAKoB,UAAWpB,EAAQE,KAAO,sBAAwB,yBAA0BoL,QAAS,kBAAMuN,EAAiB7Y,EAAvB,EAA1F,UACI,sBAAKoB,UAAU,cAAf,UACG,4BAAIG,EAAE,0BADT,KACwCvB,EAAQiO,YAEhD,qBAAK7M,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UAA2B,4BAAIG,EAAE,WAAjC,KAAiDvB,EAAQkO,WAE7D,qBAAK9M,UAAU,aAAf,SACI,sBAAKA,UAAU,cAAf,UAA6B,4BAAIG,EAAE,aAAnC,KAAqDvB,EAAQwT,aAEjE,qBAAKpS,UAAU,eAAf,SACI,sBAAKA,UAAU,cAAf,UAA8BpB,EAAQA,QAAQ6E,UAAU,EAAE,KAA1D,WAEJ,sBAAKzD,UAAU,aAAf,cACMmN,YAAOvO,EAAQR,UAAWwD,GADhC,UAIJ,cAAC,IAAD,CAAS9B,GAAE,mBAAclB,EAAQC,KAAOmB,UAAU,WAAlD,SACKG,EAAE,mBApBwBvB,EAAQC,IAwBlD,MAGR,GCoBc8Y,I,OAhEC,WACZ,IACMC,EADW7H,cACUC,SAASC,MAAM,KAAK,GACzCrR,EAAUyB,aAAY,SAAAxC,GAAK,OAC7BA,EAAMe,QAAQpB,SAAS4I,MAAK,SAAAxH,GAAO,OAAIA,EAAQC,MAAQ+Y,CAApB,GADN,IAG3B3P,EAAWyB,cACTvJ,EAAMC,YAAe,CAAC,YAAtBD,EACFyB,EAASF,IAUf,OARAO,qBAAU,WACN,IAAMyV,EAAe,6BACd9Y,GADc,IAEjBE,MAAM,IAEV0K,GAAeoO,EAAWF,EAAiBzP,EAC9C,GAAE,CAACA,EAAU2P,EAAWhZ,IAEpBA,EAUL,yBAASoB,UAAU,mBAAnB,SACE,0BAASA,UAAU,UAAnB,UACE,6BAAKpB,EAAQwT,UACT,sBAAKpS,UAAU,UAAf,UACI,gCACI,4BAAIG,EAAE,0BADV,KACyCvB,EAAQiO,YAEjD,gCACI,4BAAI1M,EAAE,YADV,KAC2BvB,EAAQe,aAGvC,sBAAKK,UAAU,aAAf,UACI,4BAAIG,EAAE,cADV,IAEI,qCAAQvB,EAAQmM,MAAQnM,EAAQmM,MAAQ,GAAxC,OACA,iCAAOnM,EAAQiZ,UAAYjZ,EAAQiZ,UAAY,GAA/C,OACA,+BAAOjZ,EAAQkZ,SAAWlZ,EAAQkZ,SAAW,QAEjD,qBAAK9X,UAAU,aAAf,SACI,sBAAKA,UAAU,YAAf,UAA2B,4BAAIG,EAAE,WAAjC,KAAiDvB,EAAQkO,MAAQlO,EAAQkO,MAAQ,eAErF,sBAAK9M,UAAU,aAAf,UACI,4BAAIG,EAAE,eADV,KAC8BvB,EAAQmZ,UAAYnZ,EAAQmZ,UAAY5X,EAAE,cAE5E,mBAAGH,UAAU,iBAAb,SAA+BpB,EAAQA,UACvC,sBAAKoB,UAAU,aAAf,UACI,mBAAGA,UAAU,WAAb,SAAyBmN,YAAOvO,EAAQR,UAAWwD,KAC/B,iBAAnBhD,EAAQe,QACT,cAAC,IAAD,CAASG,GAAE,gBAAWlB,EAAQe,QAA9B,SACI,mBAAGK,UAAU,WAAb,SAAyBG,EAAE,oCApC/B,kCACI,6BAAKA,EAAE,sBAyCtB,GCHc6X,GA/CH,WACV,IAAM/P,EAAWyB,cACXhC,IAASrH,aAAY,SAAAxC,GAAK,OAAIA,EAAM6J,KAAKd,WAAf,IAchC,OAZA3E,qBAAU,WACR,IAAIkK,GAAS,EAOb,OANKA,GAAUzE,IACb4B,GAAYrB,GACZQ,GAAYR,GACZiB,GAAUjB,GACVc,GAASd,IAEJ,kBAAMkE,GAAS,CAAf,CACR,GAAE,CAAClE,EAAUP,IAIZ,cAAC,WAAD,CAAUuQ,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,sBAAKjY,UAAU,YAAf,UACG0H,GAAQ,cAAC,EAAD,IACT,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwQ,KAAK,SAASC,QAASzQ,EAAO,cAAC,GAAD,IAAW,cAAC,GAAD,MAC/CA,GACC,qCACI,cAAC,IAAD,CAAO0Q,OAAK,EAACF,KAAK,IAAIC,QAAS,cAAC,GAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,GAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,QAAS,cAAC,GAAD,MACvC,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,GAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC9F,GAAD,MAChC,cAAC,IAAD,CAAO6F,KAAK,YAAYC,QAAS,cAAChF,GAAD,MACjC,cAAC,IAAD,CAAO+E,KAAK,sBAAsBC,QAAS,cAAC,GAAD,MAC3C,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC1C,GAAD,MACnC,cAAC,IAAD,CAAOyC,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,sBAAsBC,QAAS,cAAC,GAAD,mBAQ5D,E,uCCjDKE,GAAgB,CACpBC,IAAK,OACLC,QAAS,EACTlH,cAGImH,GAAaC,aAAgB,CACjC/Q,KAAMgR,GACNrS,QAASsS,GACTtP,MAAOuP,GACPha,QAASia,IAcLC,GAAmBC,aAAeV,IAXpB,SAACxa,EAAOE,GAQ1B,MAPoB,uBAAhBA,EAAO2N,OACT2F,KAAQ/I,WAAW,gBACnB+I,KAAQ/I,WAAW,cACnB0Q,aAAiBX,IACjBxa,OAAQob,GAGHT,GAAW3a,EAAOE,EAC1B,IAIYmb,GAAQC,YAAe,CAChCC,QAASN,GACTO,WAAY,SAACC,GAAD,OACRA,EAAqB,CACjBC,kBAAmB,CACfC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,QAH1D,IAQHC,GAAYC,aAAad,I,8BClDtCrP,KACK1G,IAAI8W,MAEJ9W,IAAI+W,MAEJ/W,IAAIgX,KAEJC,KAAK,CACFC,QAAS,CAELC,SAAU,gCAEdC,OAAO,EACPC,YAAa,KACbC,cAAe,CACXC,gBAAiB,KAErBC,GAAI,CACA,SACA,UACA,eACA,OACA,WACA,WACA,WACA,YACA,QACA,OACA,UACA,cACA,UACA,aACA,cACA,WAEJC,MAAO,CAEHC,aAAa,KAIVhR,GAAf,ECrCAiR,IAASC,OACP,cAAC,IAAD,CAAU7B,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAa8B,QAAS,KAAMjB,UAAWA,GAAvC,SACE,cAAC,GAAD,QAGJkB,SAASC,eAAe,Q","file":"static/js/main.923ec6da.chunk.js","sourcesContent":["import { createSlice, createSelector } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const messageSlice = createSlice({\r\n    name: \"message\",\r\n    initialState: {\r\n        messages: [],\r\n        isFetching: false,\r\n        error: false           \r\n    },\r\n    reducers: {\r\n        // GET ALL\r\n        getMessageStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        getMessageSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.messages = action.payload.sort((a, b) => b.createdAt.localeCompare(a.createdAt));\r\n        },\r\n        getMessageFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n        messageToggleReadStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        messageToggleReadSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            const id = action.payload;\r\n            const index = state.messages.findIndex((message) => message._id === id);\r\n            if (index !== -1) {\r\n                state.messages[index].read = !state.messages[index].read\r\n            }\r\n        },\r\n        messageToggleReadFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n        messageReadStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        messageReadSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            const { id } = action.payload;\r\n            const index = state.messages.findIndex((message) => message._id === id);\r\n            if (index !== -1) {\r\n                state.messages[index].read = true;\r\n            }\r\n        },\r\n        messageReadFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n        allMessagesReadStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        allMessagesReadSuccess: (state) => {\r\n            state.messages.forEach(message => {\r\n                message.read = true\r\n            })\r\n        },\r\n        allMessagesReadFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;            \r\n        }\r\n    },\r\n});\r\n\r\nexport const { \r\n    getMessageStart,\r\n    getMessageSuccess,\r\n    getMessageFailure,\r\n    messageToggleReadStart,\r\n    messageToggleReadSuccess,\r\n    messageToggleReadFailure,\r\n    messageReadStart,\r\n    messageReadSuccess,\r\n    messageReadFailure,\r\n    allMessagesReadStart,\r\n    allMessagesReadSuccess,\r\n    allMessagesReadFailure\r\n} = messageSlice.actions;\r\n\r\nexport default messageSlice.reducer;\r\n\r\nexport const selectAllMessages = state => state.message.messages;\r\n\r\nexport const selectMessagesByUser = createSelector(\r\n    [selectAllMessages, (state, userId) => userId],\r\n    (messages, userId) => messages.filter(message => message.userId === userId)\r\n);\r\n","import \"./sidebar.css\";\r\nimport {\r\n  LineStyle,\r\n  Timeline,\r\n  TrendingUp,\r\n  PermIdentity,\r\n  Storefront,\r\n  AttachMoney,\r\n  BarChart,\r\n  MailOutline,\r\n  DynamicFeed,\r\n  ChatBubbleOutline,\r\n  WorkOutline,\r\n  Report,\r\n  Shop\r\n} from \"@material-ui/icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAllMessages } from \"../../redux/messageRedux\";\r\n\r\nconst SideBarLink = ({ to, children }) => \r\n  <NavLink \r\n    to={to} \r\n    children={children} \r\n    className={({ isActive }) => \"sidebarListItem\" + (isActive ? \" active\" : \"\")} \r\n  />\r\n\r\n\r\nexport const Sidebar = () => {\r\n  const { t } = useTranslation([\"sidebar\"]);\r\n  const messages = useSelector(selectAllMessages);\r\n  const numUnreadMessages = messages?.filter(n => !n?.read).length;\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebarWrapper\">\r\n        <div className=\"sidebarMenu\">\r\n          <h3 className=\"sidebarTitle\">{t(\"dashboard\")}</h3>\r\n          <ul className=\"sidebarList\">\r\n            <SideBarLink to=\"/\">\r\n                <LineStyle className=\"sidebarIcon\" />\r\n                {t(\"home\")}\r\n            </SideBarLink>\r\n            <SideBarLink to=\"/analytics\">\r\n              <Timeline className=\"sidebarIcon\" />\r\n              {t(\"analytics\")}\r\n            </SideBarLink>\r\n            <SideBarLink to=\"/sales\">\r\n                <TrendingUp className=\"sidebarIcon\" />\r\n                {t(\"sales\")}\r\n            </SideBarLink>\r\n            <SideBarLink to=\"/orders\">\r\n                <Shop className=\"sidebarIcon\" />\r\n                {t(\"orders\")}\r\n            </SideBarLink>\r\n          </ul>\r\n        </div>\r\n        <div className=\"sidebarMenu\">\r\n          <h3 className=\"sidebarTitle\">{t(\"quickMenu\")}</h3>\r\n          <ul className=\"sidebarList\">\r\n            <SideBarLink to=\"/users\">\r\n                <PermIdentity className=\"sidebarIcon\" />\r\n                {t(\"users\")}\r\n            </SideBarLink>\r\n            <SideBarLink to=\"/products\">\r\n                <Storefront className=\"sidebarIcon\" />\r\n                {t(\"products\")}\r\n            </SideBarLink>\r\n            <SideBarLink to=\"/transactions\">\r\n              <AttachMoney className=\"sidebarIcon\" />\r\n              {t(\"transactions\")}\r\n            </SideBarLink>\r\n            <SideBarLink to=\"/reports\">\r\n              <BarChart className=\"sidebarIcon\" />\r\n              {t(\"reports\")}\r\n              </SideBarLink>\r\n          </ul>\r\n        </div>\r\n        <div className=\"sidebarMenu\">\r\n          <h3 className=\"sidebarTitle\">{t(\"messages\")}</h3>\r\n          <ul className=\"sidebarList\">\r\n            <SideBarLink to=\"/mail\">\r\n              <MailOutline className=\"sidebarIcon\" />\r\n              {t(\"mail\")}\r\n            </SideBarLink>\r\n            <SideBarLink to=\"/feedback\">\r\n              <DynamicFeed className=\"sidebarIcon\" />\r\n              {t(\"feedback\")}\r\n            </SideBarLink>\r\n            <SideBarLink to=\"/messages\">\r\n              <ChatBubbleOutline className=\"sidebarIcon\" />\r\n              {t(\"messages\")} {numUnreadMessages > 0 && `(${numUnreadMessages})`}\r\n            </SideBarLink>\r\n          </ul>\r\n        </div>\r\n        <div className=\"sidebarMenu\">\r\n          <h3 className=\"sidebarTitle\">{t(\"staff\")}</h3>\r\n          <ul className=\"sidebarList\">\r\n            <SideBarLink to=\"/manage\">\r\n              <WorkOutline className=\"sidebarIcon\" />\r\n              {t(\"manage\")}\r\n              </SideBarLink>\r\n            <SideBarLink to=\"/staff_analytics\">\r\n              <Timeline className=\"sidebarIcon\" />\r\n              {t(\"analytics\")}\r\n            </SideBarLink>\r\n            <SideBarLink to=\"/staff_reports\">\r\n              <Report className=\"sidebarIcon\" />\r\n              {t(\"reports\")}\r\n            </SideBarLink>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import {register} from 'timeago.js';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nexport const TOKEN = 'TOKEN';\r\n\r\nexport const ruLocaleFunc = (number, index, totalSec) => {\r\n  // number: the timeago / timein number;\r\n  // index: the index of array below;\r\n  // totalSec: total seconds between date to be formatted and today's date;\r\n  const translations =  [\r\n    ['только что', 'прямо сейчас'],\r\n    ['%s секунд назад', 'через %s секунд'],\r\n    ['1 минуту назад', 'через 1 минуту'],\r\n    ['%s минут назад', 'через %s минут'],\r\n    ['1 час назад', 'через 1 час'],\r\n    ['%s часов назад', 'через %s часов'],\r\n    ['1 день назад', 'через 1 день'],\r\n    ['%s днів тому', 'через %s дней'],\r\n    ['1 неделю назад', 'через 1 неделю'],\r\n    ['%s недель назад', 'через %s недель'],\r\n    ['1 месяц назад', 'через 1 месяц'],\r\n    ['%s месяцев назад', 'через %s месяцев'],\r\n    ['1 год назад', 'через 1 год'],\r\n    ['%s лет назад', 'через %s лет']\r\n  ];\r\n\r\n  return translations[index];\r\n};\r\n// register your locale with timeago\r\nregister('ru-locale', ruLocaleFunc);\r\n\r\nexport const uaLocaleFunc = (number, index, totalSec) => {\r\n  const translations =  [\r\n    ['щойно', 'прямо зараз'],\r\n    ['%s секунд тому', 'через %s секунд'],\r\n    ['1 хвилину тому', 'через 1 хвилину'],\r\n    ['%s хвилин тому', 'через %s хвилин'],\r\n    ['1 годину тому', 'через 1 годину'],\r\n    ['%s годин тому', 'через %s годин'],\r\n    ['1 день тому', 'через 1 день'],\r\n    ['%s днів тому', 'через %s днів'],\r\n    ['1 тиждень тому', 'через 1 тиждень'],\r\n    ['%s тижнів тому', 'через %s тижнів'],\r\n    ['1 місяць тому', 'через 1 місяць'],\r\n    ['%s місяців тому', 'через %s місяців'],\r\n    ['1 рік тому', 'через 1 рік'],\r\n    ['%s років тому', 'через %s років']\r\n  ];\r\n\r\n  return translations[index];\r\n};\r\n// register your locale with timeago\r\nregister('ua-locale', uaLocaleFunc);\r\n\r\nexport function useLocale() {\r\n    const [locale, setLocale] = useState('en-locale');\r\n    const lang = localStorage.getItem(\"i18nextLng\");\r\n    useEffect(() => {\r\n        setLocale(lang === 'ua' ? 'ua-locale' : 'en-locale');  \r\n    }, [lang])\r\n    return locale;\r\n};","import axios from 'axios';\r\nimport { TOKEN } from './constants';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const BASE_URL = 'https://dark-tan-yak-garb.cyclic.app/api';\r\n\r\nexport const publicRequest = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: true\r\n});\r\n\r\nexport const userRequest = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: true\r\n});\r\n\r\nexport const updateRefreshToken = (refreshToken, refreshTokenId) => {\r\n    localStorage.setItem(TOKEN, JSON.stringify({\r\n        refreshToken,\r\n        refreshTokenId\r\n    }))\r\n};\r\n\r\nexport const getRefreshToken = () => JSON.parse(localStorage.getItem(TOKEN) || '{}');\r\n\r\nexport const existRefreshToken = () => !!getRefreshToken().refreshToken;\r\n\r\nexport const clearRefreshToken = () => localStorage.removeItem(TOKEN);\r\n\r\nuserRequest.interceptors.request.use(async (config) => {\r\n    let existingAccessToken = !!config.headers.token;\r\n    if (existingAccessToken) {\r\n        const accessToken = config.headers.token?.substring(7);\r\n        let currentDate = new Date();\r\n        const decodedToken = accessToken && jwt_decode(accessToken);\r\n        existingAccessToken = decodedToken.exp * 1000 < currentDate.getTime();\r\n    }\r\n    if (!existingAccessToken) {\r\n        const { refreshToken, refreshTokenId } = getRefreshToken();\r\n        try {\r\n            const res = await publicRequest.put(\"/auth/refresh_token\", {refreshToken, refreshTokenId});\r\n            updateRefreshToken(res.data.refreshToken, refreshTokenId);\r\n            config.headers[\"token\"] = \"Bearer \" + res.data.newAccessToken;\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n    return config;\r\n}, (error) => {\r\n    return Promise.reject(error)\r\n});","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'order',\r\n    initialState: {\r\n        orders: [],\r\n        isFetching: false,\r\n        error: false\r\n    },\r\n    reducers: {\r\n        getOrderStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        getOrderSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.orders = action.payload\r\n        },\r\n        getOrderFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n        deleteOrderStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        deleteOrderSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.orders.splice(\r\n                state.orders.findIndex(item => item._id === action.payload.id),\r\n                1\r\n            );\r\n        },\r\n        deleteOrderFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n        updateOrderStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        updateOrderSuccess: (state, action) => {\r\n            const { id, updatedOrder } = action.payload;\r\n            const index = state.orders.findIndex((item) => item._id === id);\r\n            if (index !== -1) {\r\n                state.orders[index] = { ...state.orders[index], ...updatedOrder };\r\n            }\r\n            state.isFetching = false;\r\n        },\r\n        updateOrderFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n        addOrderStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        addOrderSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.orders.push(action.payload);\r\n        },\r\n        addOrderFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    getOrderStart,\r\n    getOrderSuccess,\r\n    getOrderFailure,\r\n    deleteOrderStart,\r\n    deleteOrderSuccess,\r\n    deleteOrderFailure,\r\n    updateOrderStart,\r\n    updateOrderSuccess,\r\n    updateOrderFailure,\r\n    addOrderStart,\r\n    addOrderSuccess,\r\n    addOrderFailure\r\n} = orderSlice.actions;\r\n\r\nexport default orderSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const productSlice = createSlice({\r\n    name: \"product\",\r\n    initialState: {\r\n        products: [],\r\n        isFetching: false,\r\n        error: false,\r\n    },\r\n    reducers: {\r\n        // GET ALL\r\n        getProductStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        getProductSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.products = action.payload;\r\n        },\r\n        getProductFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n\r\n        // DELETE ALL\r\n        deleteProductStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        deleteProductSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.products.splice(\r\n                state.products.findIndex(item => item._id === action.payload.id),\r\n                1\r\n            );\r\n        },\r\n        deleteProductFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n\r\n        // UPDATE ALL\r\n        updateProductStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        updateProductSuccess: (state, action) => {\r\n            const currentProduct = state.products.find((item) => item._id === action.payload.id)\r\n            state.isFetching = false;\r\n            state.products[state.products.findIndex((item) => item._id === action.payload.id)] = {\r\n                ...currentProduct,\r\n                ...action.payload.product,\r\n                desc: {\r\n                    ...currentProduct.desc,\r\n                    ...action.payload.product.desc\r\n                }\r\n            };\r\n        },\r\n        updateProductFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n\r\n        // ADD ALL\r\n        addProductStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        addProductSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.products.push(action.payload)\r\n        },\r\n        addProductFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    getProductStart,\r\n    getProductSuccess,\r\n    getProductFailure,\r\n    deleteProductStart,\r\n    deleteProductSuccess,\r\n    deleteProductFailure,\r\n    updateProductStart,\r\n    updateProductSuccess,\r\n    updateProductFailure,\r\n    addProductStart,\r\n    addProductSuccess,\r\n    addProductFailure\r\n} = productSlice.actions;\r\n\r\nexport default productSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        currentUser: null,\r\n        isFetching: false,\r\n        error: false,\r\n        users: []\r\n    },\r\n    reducers: {\r\n        loginStart: (state) => {\r\n            state.isFetching = true\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.currentUser = action.payload\r\n        },\r\n        loginFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n        logoutStart: (state) => {\r\n            state.isFetching = true\r\n        },\r\n        logoutSuccess: (state) => {\r\n            state.isFetching = false;\r\n            state.currentUser = null;\r\n            state.error = false;\r\n        },\r\n        logoutFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n        getUsersStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        getUsersSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.users = action.payload;\r\n        },\r\n        getUsersFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n        updateUserStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        updateUserSuccess: (state, action) => {\r\n            const { id, updatedUser } = action.payload;\r\n            const index = state.users.findIndex((user) => user._id === id);\r\n            if (index !== -1) {\r\n                state.users[index] = { ...state.users[index], ...updatedUser};\r\n            }\r\n            state.isFetching = false;\r\n        },\r\n        updateUserFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        },\r\n        deleteUserStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n        },\r\n        deleteUserSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.users.splice(\r\n                state.products.findIndex(item => item._id === action.payload.id),\r\n                1\r\n            );\r\n        },\r\n        deleteUserFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n        }\r\n    },\r\n});\r\n\r\nexport const { \r\n    loginStart, \r\n    loginSuccess, \r\n    loginFailure,\r\n    logoutStart,\r\n    logoutSuccess,\r\n    logoutFailure,\r\n    getUsersStart,\r\n    getUsersSuccess,\r\n    getUsersFailure,\r\n    updateUserStart,\r\n    updateUserSuccess,\r\n    updateUserFailure,\r\n    deleteUserStart,\r\n    deleteUserSuccess,\r\n    deleteUserFailure\r\n} = userSlice.actions;\r\nexport default userSlice.reducer;\r\n\r\nexport const selectAllUsers = state => state.user.users;","import { \r\n    clearRefreshToken, \r\n    publicRequest, \r\n    updateRefreshToken, \r\n    userRequest \r\n} from \"../requestMethods\";\r\nimport { \r\n    getMessageStart, \r\n    getMessageSuccess, \r\n    getMessageFailure, \r\n    messageToggleReadStart, \r\n    messageToggleReadSuccess, \r\n    messageToggleReadFailure,\r\n    messageReadStart,\r\n    messageReadSuccess,\r\n    messageReadFailure,\r\n} from \"./messageRedux\";\r\nimport { \r\n    getOrderStart, \r\n    getOrderSuccess,\r\n    getOrderFailure,\r\n    deleteOrderStart,\r\n    deleteOrderSuccess,\r\n    deleteOrderFailure,\r\n    updateOrderStart,\r\n    updateOrderSuccess,\r\n    updateOrderFailure, \r\n} from \"./orderRedux\";\r\nimport { \r\n    addProductFailure,\r\n    addProductStart,\r\n    addProductSuccess,\r\n    deleteProductFailure, \r\n    deleteProductStart, \r\n    deleteProductSuccess, \r\n    getProductFailure, \r\n    getProductStart, \r\n    getProductSuccess, \r\n    updateProductFailure, \r\n    updateProductStart,\r\n    updateProductSuccess,\r\n} from \"./productRedux\";\r\nimport { \r\n    loginFailure, \r\n    loginStart, \r\n    loginSuccess,\r\n    logoutStart, \r\n    logoutSuccess, \r\n    logoutFailure, \r\n    getUsersStart,\r\n    getUsersSuccess,\r\n    getUsersFailure,\r\n    deleteUserStart,\r\n    deleteUserSuccess,\r\n    deleteUserFailure,\r\n    updateUserSuccess,\r\n    updateUserStart,\r\n    updateUserFailure\r\n } from \"./userRedux\";\r\n\r\n\r\nexport const login = async (dispatch, user) => {\r\n    dispatch(loginStart());\r\n    try {\r\n        const { data } = await publicRequest.post(\"/auth/login\", user)\r\n        const { accessToken, refreshToken, refreshTokenId, ...others } = data;\r\n        dispatch(loginSuccess(others));\r\n        updateRefreshToken(refreshToken, refreshTokenId);\r\n    } catch(err) {\r\n        dispatch(loginFailure());\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const logout = async (dispatch, refreshTokenId) => {\r\n    dispatch(logoutStart());\r\n    try {\r\n        await userRequest.post(\"/auth/logout_post\", refreshTokenId)\r\n        dispatch(logoutSuccess());\r\n        clearRefreshToken();\r\n        delete userRequest.defaults.headers.common[\"token\"];\r\n    } catch(err) {\r\n        dispatch(logoutFailure());\r\n        console.log(err)\r\n    }\r\n};\r\n\r\nexport const getProducts = async (dispatch) => {\r\n    dispatch(getProductStart());\r\n    try {\r\n        const res = await publicRequest.get(\"/products\");\r\n        dispatch(getProductSuccess(res.data))\r\n    } catch(err) {\r\n        dispatch(getProductFailure());\r\n        console.log(err)\r\n    }\r\n};\r\n\r\nexport const deleteProduct = async (id, dispatch) => {\r\n    dispatch(deleteProductStart());\r\n    try {\r\n        await userRequest.delete(`/products/${id}`)\r\n        dispatch(deleteProductSuccess(id))\r\n    } catch(err) {\r\n        dispatch(deleteProductFailure());\r\n        console.log(err)\r\n    }\r\n};\r\n\r\nexport const updateProduct = async (id, product, dispatch) => {\r\n    dispatch(updateProductStart());\r\n    try {\r\n        // update \r\n        await userRequest.put(`/products/${id}`, product);\r\n        dispatch(updateProductSuccess({id, product}))\r\n    } catch(err) {\r\n        dispatch(updateProductFailure());\r\n        console.log(err)\r\n    }\r\n};\r\n\r\nexport const addProduct = async (product, dispatch) => {\r\n    dispatch(addProductStart());\r\n    try {\r\n        const res = await userRequest.post(`/products`, product);\r\n        dispatch(addProductSuccess(res.data));\r\n    } catch(err) {\r\n        dispatch(addProductFailure());\r\n        console.log(err)\r\n    }\r\n};\r\n\r\nexport const getUsers = async (dispatch) => {\r\n    dispatch(getUsersStart());\r\n    try {\r\n        const res = await userRequest.get('/users');\r\n        dispatch(getUsersSuccess(res.data));\r\n    } catch(err) {\r\n        dispatch(getUsersFailure());\r\n        console.log(err)\r\n    }\r\n};\r\n\r\nexport const deleteUser = async (id, dispatch) => {\r\n    dispatch(deleteUserStart());\r\n    try {\r\n        await userRequest.delete(`/users/${id}`)\r\n        dispatch(deleteUserSuccess(id))\r\n    } catch(err) {\r\n        dispatch(deleteUserFailure());\r\n        console.log(err)\r\n    }\r\n};\r\n\r\nexport const updateUser = async (id, user, dispatch) => {\r\n    dispatch(updateUserStart());\r\n    try {\r\n        const res = await userRequest.put(`/users/${id}`, user);\r\n        const updatedUser = res.data;\r\n        dispatch(updateUserSuccess({id, updatedUser}));\r\n    } catch(err) {\r\n        dispatch(updateUserFailure());\r\n        console.log(err)\r\n    }\r\n};\r\n\r\nexport const getOrders = async (dispatch) => {\r\n    dispatch(getOrderStart());\r\n    try {\r\n        const res = await userRequest.get(\"/orders\");\r\n        dispatch(getOrderSuccess(res.data))\r\n    } catch(err) {\r\n        dispatch(getOrderFailure());\r\n        console.log(err)\r\n    }\r\n};\r\n\r\nexport const deleteOrder = async (id, dispatch) => {\r\n    dispatch(deleteOrderStart());\r\n    try {\r\n        await userRequest.delete(`/orders/${id}`)\r\n        dispatch(deleteOrderSuccess(id))\r\n    } catch(err) {\r\n        dispatch(deleteOrderFailure());\r\n        console.log(err)\r\n    }\r\n};\r\n\r\nexport const updateOrder = async (id, order, dispatch) => {\r\n    dispatch(updateOrderStart());\r\n    try {\r\n        // update \r\n        const res = await userRequest.put(`/orders/${id}`, order);\r\n        const updatedOrder = res.data;\r\n        dispatch(updateOrderSuccess({id, updatedOrder}))\r\n    } catch(err) {\r\n        dispatch(updateOrderFailure());\r\n        console.log(err)\r\n    }\r\n};\r\n\r\nexport const getMessages = async (dispatch) => {\r\n    dispatch(getMessageStart());\r\n    try {\r\n        const res = await userRequest.get(\"/notifications\");\r\n        dispatch(getMessageSuccess(res.data))\r\n    } catch(err) {\r\n        dispatch(getMessageFailure());\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const updateMessage = async (id, message, dispatch) => {\r\n    dispatch(messageToggleReadStart());\r\n    try {\r\n        await userRequest.put(`/notifications/${id}`, message);\r\n        dispatch(messageToggleReadSuccess(id));\r\n    } catch(err) {\r\n        dispatch(messageToggleReadFailure());\r\n        console.log(err)\r\n    }\r\n};\r\n\r\nexport const setMessageRead = async (id, message, dispatch) => {\r\n    dispatch(messageReadStart());\r\n    try {\r\n        await userRequest.put(`/notifications/${id}`, message);\r\n        dispatch(messageReadSuccess(id))\r\n    } catch(err) {\r\n        dispatch(messageReadFailure());\r\n        console.log(err)\r\n    }\r\n};\r\n","import { useEffect } from \"react\";\r\nimport \"./topbar.css\";\r\nimport { NotificationsNone, Language, Settings } from \"@material-ui/icons\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../redux/apiCalls\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\nimport { selectAllMessages } from \"../../redux/messageRedux\";\r\nimport { getRefreshToken } from \"../../requestMethods\";\r\n\r\n\r\nconst Topbar = () => {\r\n  const user = useSelector(state => state.user.currentUser);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { i18n, t } = useTranslation([\"topbar\"]);\r\n  const messages = useSelector(selectAllMessages);\r\n  const numUnreadMessages = messages?.filter(n => !n?.read).length;\r\n\r\n  const handleLanguage = (e) => {\r\n    i18n.changeLanguage(e.target.value)\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"i18nextLng\")?.length > 2) {\r\n      i18next.changeLanguage(\"en\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      // Navigate to login page if user is logged out\r\n      navigate(\"/login\");\r\n    }\r\n  }, [user, navigate]);\r\n  \r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const refreshTokenId = getRefreshToken().refreshTokenId;\r\n    logout(dispatch, { refreshTokenId });\r\n  };\r\n\r\n  return (\r\n    <div className=\"topbar\">\r\n      <div className=\"topbarWrapper\">\r\n        <div className=\"topLeft\">\r\n          <Link to=\"/\" style={{ textDecoration: 'none'}}>\r\n            <span className=\"logo\">{t(\"logo\")}</span>\r\n          </Link>\r\n        </div>\r\n        <div className=\"topRight\">\r\n          {user\r\n            ? <button className=\"logoutButton\" onClick={(e) => handleClick(e)}>{t(\"logout\")}</button>\r\n            : <Link to=\"/login\" className=\"logoutButton\">{t(\"login\")}</Link>\r\n          }\r\n          <Link to=\"/messages\"> \r\n            <div className=\"topbarIconContainer\">\r\n              <NotificationsNone />\r\n              {numUnreadMessages > 0 && <span className=\"topIconBadge\">{numUnreadMessages}</span>}\r\n            </div>\r\n          </Link>\r\n          <div className=\"topbarIconContainer\">\r\n            <Language />\r\n            <select \r\n              className=\"selectLanguage\"\r\n              onChange={handleLanguage} \r\n              value={localStorage.getItem(\"i18nextLng\")}\r\n            >\r\n              <option value=\"en\">EN</option>\r\n              <option value=\"ua\">UA</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"topbarIconContainer\">\r\n            <Settings />\r\n          </div>\r\n          <img src=\"https://firebasestorage.googleapis.com/v0/b/shop-80015.appspot.com/o/grape-icon.png?alt=media&token=edb90e89-ed75-4e1d-b172-d92fdaba92bb\" alt=\"\" className=\"topAvatar\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Topbar","import \"./chart.css\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst Chart = ({ title, data, dataKey, grid }) => {\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      <h3 className=\"chartTitle\">{title}</h3>\r\n      <ResponsiveContainer width=\"100%\" aspect={4 / 1}>\r\n        <LineChart data={data}>\r\n          <XAxis dataKey=\"name\" stroke=\"#5550bd\" interval=\"preserveStartEnd\"/>\r\n          <Line type=\"monotone\" dataKey={dataKey} stroke=\"#5550bd\" />\r\n          <Tooltip />\r\n          {grid && <CartesianGrid stroke=\"#e0dfdf\" strokeDasharray=\"5 5\" />}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import \"./featuredInfo.css\";\r\nimport { ArrowDownward, ArrowUpward } from \"@material-ui/icons\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { userRequest } from \"../../requestMethods\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nconst FeaturedInfo = () => {\r\n  const [income, setIncome] = useState([]);\r\n  const [perc, setPerc] = useState(0);\r\n  const { t } = useTranslation([\"featuredInfo\"]);\r\n\r\n  useEffect(() => {\r\n    let ignore = false;\r\n    (async () => {\r\n      try{\r\n        const res = await userRequest.get(\"orders/income\");\r\n        !ignore && setIncome(res.data);\r\n        !ignore && setPerc((res.data[income.length - 1]?.total*100) / res.data[income.length - 2]?.total - 100);\r\n      } catch(err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n\r\n    return () => ignore = true;\r\n  }, [income.length]);\r\n\r\n  return (\r\n    <div className=\"featured\">\r\n      <div className=\"featuredItem\">\r\n        <span className=\"featuredTitle\">{t(\"revenue\")}</span>\r\n        <div className=\"featuredMoneyContainer\">\r\n          <span className=\"featuredMoney\">{income[income.length - 1]?.total} {t(\"uah\")}</span>\r\n          <span className=\"featuredMoneyRate\">\r\n            %{Math.floor(perc) || ''}{\" \"} \r\n            {perc < 0 ? (\r\n              <ArrowDownward  className=\"featuredIcon negative\"/>\r\n            ) : (\r\n              <ArrowUpward className=\"featuredIcon\"/>\r\n            )}\r\n          </span>\r\n        </div>\r\n        <span className=\"featuredSub\">{t(\"compared_to_last_month\")}</span>\r\n      </div>\r\n      <div className=\"featuredItem\">\r\n        <span className=\"featuredTitle\">{t(\"sales\")}</span>\r\n        <div className=\"featuredMoneyContainer\">\r\n          <span className=\"featuredMoney\">$4,415</span>\r\n          <span className=\"featuredMoneyRate\">\r\n            -1.4 <ArrowDownward className=\"featuredIcon negative\"/>\r\n          </span>\r\n        </div>\r\n        <span className=\"featuredSub\">{t(\"compared_to_last_month\")}</span>\r\n      </div>\r\n      <div className=\"featuredItem\">\r\n        <span className=\"featuredTitle\">{t(\"cost\")}</span>\r\n        <div className=\"featuredMoneyContainer\">\r\n          <span className=\"featuredMoney\">$2,225</span>\r\n          <span className=\"featuredMoneyRate\">\r\n            +2.4 <ArrowUpward className=\"featuredIcon\"/>\r\n          </span>\r\n        </div>\r\n        <span className=\"featuredSub\">{t(\"compared_to_last_month\")}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeaturedInfo;\r\n","import \"./widgetSm.css\";\r\nimport { Visibility } from \"@material-ui/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { userRequest } from '../../requestMethods';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst WidgetSm = () => {\r\n  const { t } = useTranslation([\"widgetSm\"])\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let ignore = false;\r\n    (async () => {\r\n      try {\r\n        const res = await userRequest.get(\"users/?new=true\")\r\n        !ignore && setUsers(res.data)\r\n      } catch(err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      ignore = true\r\n    };\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"widgetSm\">\r\n      <span className=\"widgetSmTitle\">{t(\"newJoinMembers\")}</span>\r\n      <ul className=\"widgetSmList\">\r\n        {users?.map((user) => (\r\n          <li className=\"widgetSmListItem\" key={user._id}>\r\n            <div className=\"widgetSmUserBlock\">\r\n              <img\r\n                src={user.img ||\r\n                  \"https://crowd-literature.eu/wp-content/uploads/2015/01/no-avatar.gif\"\r\n                }\r\n                alt=\"\"\r\n                className=\"widgetSmImg\"\r\n                />\r\n              <div className=\"widgetSmUser\">\r\n                <span className=\"widgetSmUsername\">{user.username}</span>\r\n                <span className=\"widgetSmEmail\">{user.email}</span>\r\n              </div>\r\n            </div>\r\n            <NavLink to={`/user/${user._id}`}>\r\n              <button className=\"widgetSmButton\">\r\n                <Visibility className=\"widgetSmIcon\" />\r\n                {t(\"display\")}\r\n              </button>\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WidgetSm;\r\n","import \"./widgetLg.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { userRequest } from '../../requestMethods';\r\nimport {format} from 'timeago.js';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useLocale } from \"../../constants\";\r\n\r\n\r\nconst WidgetLg = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const { t } = useTranslation([\"widgetLg\"]);\r\n  const locale = useLocale();\r\n\r\n  useEffect(() => {\r\n    let ignore = false;\r\n    (async () => {\r\n      try {\r\n        const res = await userRequest.get(\"orders\");\r\n        !ignore && setOrders(res.data);\r\n      } catch(err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      ignore = false\r\n    }\r\n  }, []);\r\n  const Button = ({ type }) => {\r\n    return <button className={\"widgetLgButton \" + type}>{type}</button>;\r\n  };\r\n  return (\r\n    <div className=\"widgetLg\">\r\n      <h3 className=\"widgetLgTitle\">{t(\"latest_transactions\")}</h3>\r\n      <table className=\"widgetLgTable\">\r\n        <thead>\r\n          <tr className=\"widgetLgTr\">\r\n            <th className=\"widgetLgTh\">{t(\"customer\")}</th>\r\n            <th className=\"widgetLgTh\">{t(\"date\")}</th>\r\n            <th className=\"widgetLgTh\">{t(\"amount\")}</th>\r\n            <th className=\"widgetLgTh\">{t(\"status\")}</th>\r\n          </tr>\r\n        </thead>\r\n        {orders.map((order) => (\r\n        <tbody key={order._id}>\r\n          <tr className=\"widgetLgTr\" key={order._id}>\r\n            <td className=\"widgetLgUser\">\r\n              <span className=\"widgetLgName\">{order.userId}</span>\r\n            </td>\r\n            <td className=\"widgetLgDate\">{format(order.createdAt, locale)}</td>\r\n            <td className=\"widgetLgAmount\">{order.amount} {t(\"uah\")}</td>\r\n            <td className=\"widgetLgStatus\">\r\n              <Button type={order.status} />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n        ))}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WidgetLg;\r\n","import Chart from \"../../components/chart/Chart\";\r\nimport FeaturedInfo from \"../../components/featuredInfo/FeaturedInfo\";\r\nimport \"./home.css\";\r\nimport WidgetSm from \"../../components/widgetSm/WidgetSm\";\r\nimport WidgetLg from \"../../components/widgetLg/WidgetLg\";\r\nimport { useState, useMemo, useEffect } from \"react\";\r\nimport { userRequest } from \"../../requestMethods\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst Home = () => {\r\n  const { t } = useTranslation([\"home\"]);\r\n  const [userStats, setUserStats] = useState([]);\r\n  const user = useSelector(state => state.user);\r\n\r\n  const MONTHS = useMemo(\r\n    () => [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\"\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    let ignore = false;\r\n    (user && (async () => {\r\n      try {\r\n        const res = await userRequest.get(\"/users/stats\");\r\n        !ignore && setUserStats([]);\r\n        res.data.map(item => \r\n          !ignore && setUserStats(prev => [\r\n            ...prev,\r\n            {name:`${MONTHS[item._id.month-1]}-${item._id.year}`, \"Active User\": item.total},\r\n          ])\r\n        );\r\n      } catch(err) {\r\n        console.log(err)\r\n      }\r\n    })());\r\n\r\n    return () => {\r\n      ignore = true;\r\n    };\r\n  }, [MONTHS, user]);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <FeaturedInfo />\r\n      <Chart \r\n        data={userStats} \r\n        title={t(\"userRegistrationAnalytics\")} \r\n        grid dataKey=\"Active User\"\r\n      />\r\n      <div className=\"homeWidgets\">\r\n        <WidgetSm />\r\n        <WidgetLg />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./userList.css\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteUser } from \"../../redux/apiCalls\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { \r\n  Dialog, \r\n  DialogTitle, \r\n  DialogActions, \r\n  Button \r\n} from '@material-ui/core';\r\nimport { selectAllUsers } from \"../../redux/userRedux\";\r\n\r\nconst UserList = () => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector(selectAllUsers);\r\n  const [deleteUserId, setDeleteUserId] = useState(null);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const { t } = useTranslation([\"userList\"])\r\n  \r\n  const columns = [\r\n    { field: \"_id\", headerName: t(\"id\"), width: 200 },\r\n    {\r\n      field: \"username\",\r\n      headerName: t(\"user\"),\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"userListUser\">\r\n            {/* <img className=\"userListImg\" src={params.row.avatar} alt=\"\" /> */}\r\n            {params.row.username}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    { field: \"email\", headerName: t(\"email\"), width: 200 },\r\n    {\r\n      field: \"status\",\r\n      headerName: t(\"status\"),\r\n      width: 120,\r\n    },\r\n    {\r\n      field: \"transaction\",\r\n      headerName: t(\"transaction_volume\"),\r\n      width: 160,\r\n    },\r\n    {\r\n      field: \"action\",\r\n      headerName: t(\"action\"),\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={\"/user/\" + params.row._id}>\r\n              <button className=\"userListEdit\">{t(\"edit\")}</button>\r\n            </Link>\r\n            <DeleteOutline\r\n              className=\"userListDelete\"\r\n              onClick={() => {\r\n                setDeleteUserId(params.row._id);\r\n                setOpenDeleteDialog(true)                \r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"userList\">\r\n      <Link to=\"/newUser\">\r\n        <button className=\"createButton\">{t(\"createNewUser\")}</button>\r\n      </Link>\r\n      {!!users.length && <DataGrid\r\n        rows={users}\r\n        disableSelectionOnClick\r\n        columns={columns}\r\n        getRowId={(row) => row._id}\r\n        pageSize={8}\r\n        checkboxSelection\r\n      />}\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={() => setOpenDeleteDialog(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>{t(\"deleteConfirmation\")} {deleteUserId} ?</DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenDeleteDialog(false)} color=\"primary\">\r\n            {t(\"cancel\")}\r\n          </Button>\r\n          <Button onClick={() => {\r\n            deleteUser(deleteUserId, dispatch);\r\n            setOpenDeleteDialog(false);\r\n          }} color=\"primary\" autoFocus>\r\n            {t(\"delete\")}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCk3aOIhrv5B3PrI1fMHVgFIAutn2GKO8c\",\r\n  authDomain: \"shop-80015.firebaseapp.com\",\r\n  projectId: \"shop-80015\",\r\n  storageBucket: \"shop-80015.appspot.com\",\r\n  messagingSenderId: \"1032728149458\",\r\n  appId: \"1:1032728149458:web:31b60cd11de2f35a561c0b\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport default app;","import {\r\n  CalendarToday,\r\n  LocationSearching,\r\n  MailOutline,\r\n  PermIdentity,\r\n  PhoneAndroid,\r\n  Publish,\r\n} from \"@material-ui/icons\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport \"./user.css\";\r\nimport {format} from 'timeago.js';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useState } from \"react\";\r\nimport { updateUser } from \"../../redux/apiCalls\";\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport app from '../../firebase';\r\nimport { selectMessagesByUser } from \"../../redux/messageRedux\";\r\nimport { useLocale } from \"../../constants\";\r\n\r\n\r\nconst User = () => {\r\n  const location = useLocation();\r\n  const userId = location.pathname.split(\"/\")[2];\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation([\"user\"]);\r\n  const user = useSelector((state) => \r\n  state.user.users.find(user => user._id === userId)\r\n  );\r\n  const messagesByUser = useSelector(state => selectMessagesByUser(state, userId));\r\n  const [inputs, setInputs] = useState({});\r\n  const [ file, setFile ] = useState(null);\r\n  const locale = useLocale();\r\n\r\n  const handleChange = (e) => {\r\n    setInputs(prev => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value\r\n    }))\r\n  };\r\n\r\n  const handleUpdateUser = (e) => {\r\n    e.preventDefault();\r\n    if (file) {\r\n      const fileName = new Date().getTime() + file.name;\r\n      const storage = getStorage(app);\r\n      const storageRef = ref(storage, fileName);\r\n      const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n      // Register three observers:\r\n      // 1. 'state_changed' observer, called any time the state changes\r\n      // 2. Error observer, called on failure\r\n      // 3. Completion observer, called on successful completion\r\n      uploadTask.on('state_changed',\r\n      (snapshot) => {\r\n        // Observe state change events such as progress, pause, and resume\r\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log('Upload is ' + progress + '% done');\r\n        switch (snapshot.state) {\r\n        case 'paused':\r\n            console.log('Upload is paused');\r\n            break;\r\n        case 'running':\r\n            console.log('Upload is running');\r\n            break;\r\n        default:\r\n        }        \r\n      },\r\n      (error) => {\r\n          // Handle unsuccessful uploads\r\n      },     \r\n      () => {\r\n          // Handle successful uploads on complete\r\n          // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n              const userToUpdate = { \r\n                  ...user,\r\n                  ...inputs,  \r\n                  img: downloadURL, \r\n              };\r\n              updateUser(userId, userToUpdate, dispatch);\r\n          });\r\n      },\r\n      navigate('/users/')\r\n      );\r\n    } else {\r\n      const userToUpdate = {\r\n        ...user,\r\n        ...inputs\r\n      }\r\n      updateUser(userId, userToUpdate, dispatch);\r\n      navigate('/users/');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"user\">\r\n      <div className=\"userTitleContainer\">\r\n        <div className=\"userShowTopTitle\">\r\n          <span className=\"userShowUsername\">{user?.username}</span>\r\n          <span className=\"userShowUserTitle\">{user?.email}</span>\r\n          <span className=\"userShowUserTitle\">{format(user?.createdAt, locale)}</span>\r\n        </div>\r\n        <h1 className=\"userTitle\">{t(\"editTitle\")}</h1>\r\n        <Link to=\"/newUser\">\r\n          <button className=\"userAddButton\">{t(\"createButton\")}</button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"userContainer\">\r\n        <div className=\"userShow\">\r\n          <div className=\"userShowTop\">\r\n            <img\r\n              src={user?.img ? user.img : \"https://images.pexels.com/photos/1152994/pexels-photo-1152994.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"}\r\n              alt=\"\"\r\n              className=\"userShowImg\"\r\n            />\r\n            <div className=\"userShowTopTitle\">\r\n              <span className=\"userShowUsername\">{user?.username ? user.username : t(\"unknown\")}</span>\r\n              <span className=\"userShowUserTitle\">{user?.title ? user.title : t(\"unknown\")}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"userShowBottom\">\r\n            <span className=\"userShowTitle\">{t(\"accountDetails\")}</span>\r\n            <div className=\"userShowInfo\">\r\n              <PermIdentity className=\"userShowIcon\" />\r\n              <span className=\"userShowInfoTitle\">{user?.username ? user.username : t(\"unknown\")}</span>\r\n            </div>\r\n            <div className=\"userShowInfo\">\r\n              <CalendarToday className=\"userShowIcon\" />\r\n              <span className=\"userShowInfoTitle\">{user?.dob ? user.dob : t(\"birthday\")}</span>\r\n            </div>\r\n            <span className=\"userShowTitle\">{t(\"contactDetails\")}</span>\r\n            <div className=\"userShowInfo\">\r\n              <PhoneAndroid className=\"userShowIcon\" />\r\n              <span className=\"userShowInfoTitle\">{user?.phone ? user.phone : t(\"phone\")}</span>\r\n            </div>\r\n            <div className=\"userShowInfo\">\r\n              <MailOutline className=\"userShowIcon\" />\r\n              <span className=\"userShowInfoTitle\">{user?.email ? user.email : t(\"email\")}</span>\r\n            </div>\r\n            <div className=\"userShowInfo\">\r\n              <LocationSearching className=\"userShowIcon\" />\r\n              <span className=\"userShowInfoTitle\">{user?.address ? user.address : t(\"address\")}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"userUpdate\">\r\n          <span className=\"userUpdateTitle\">{t(\"edit\")}</span>\r\n          <form className=\"userUpdateForm\">\r\n            <div className=\"userUpdateLeft\">\r\n              <div className=\"userUpdateItem\">\r\n                <label>{t(\"username\")}</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  placeholder={user?.username ? user.username : t(\"unknown\")}\r\n                  className=\"userUpdateInput\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </div>\r\n              <div className=\"userUpdateItem\">\r\n                <label>{t(\"fullName\")}</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"fullname\"\r\n                  placeholder={user?.fullname ? user.fullname : t(\"fullName\")}\r\n                  className=\"userUpdateInput\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </div>\r\n              <div className=\"userUpdateItem\">\r\n                <label>{t(\"email\")}</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder={user?.email ? user.email : t(\"email\")}\r\n                  className=\"userUpdateInput\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </div>\r\n              <div className=\"userUpdateItem\">\r\n                <label>{t(\"phone\")}</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  placeholder={user?.phone ? user.phone : t(\"phone\")}\r\n                  className=\"userUpdateInput\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </div>\r\n              <div className=\"userUpdateItem\">\r\n                <label>{t(\"birthday\")}</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"dob\"\r\n                  placeholder={user?.dob ? user.dob : t(\"birthday\")}\r\n                  className=\"userUpdateInput\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </div>\r\n              <div className=\"userUpdateItem\">\r\n                <label>{t(\"address\")}</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  placeholder={user?.address ? user.address : t(\"address\")}\r\n                  className=\"userUpdateInput\"\r\n                  onChange={(e) => handleChange(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"userUpdateRight\">\r\n              <div className=\"userUpdateUpload\">\r\n                <img\r\n                  className=\"userUpdateImg\"\r\n                  src={user?.img ? user.img : \"https://images.pexels.com/photos/1152994/pexels-photo-1152994.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"}\r\n                  alt=\"\"\r\n                />\r\n                <label htmlFor=\"file\">\r\n                  <Publish className=\"userUpdateIcon\" />\r\n                </label>\r\n                <input type=\"file\" id=\"file\" style={{ display: \"none\" }} onChange={e => setFile(e.target.files[0])}/>\r\n              </div>\r\n              <button className=\"userUpdateButton\" onClick={handleUpdateUser}>{t(\"updateButton\")}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"userNotifications\">\r\n        <h2>{t(\"notifications\")}</h2>\r\n        <ul className=\"notificationsList\">\r\n          {messagesByUser.map(message => (\r\n            <li key={message._id}>\r\n              <Link \r\n                to={`/message/${message._id}`}\r\n                className=\"notificationItem\"\r\n              >\r\n                {message.subject} <i>{format(message?.createdAt, locale)}</i>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { useState } from \"react\";\r\nimport { userRequest } from \"../../requestMethods\";\r\nimport \"./newUser.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport app from '../../firebase';\r\n\r\n\r\nexport default function NewUser() {\r\n  const [inputs, setInputs] = useState({});\r\n  const [ file, setFile ] = useState(null);\r\n  const { t } = useTranslation([\"newUser\"])\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault()\r\n    setInputs(prev => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value\r\n    }))\r\n  }\r\n\r\n  const handleCreateUser = async (e) => {\r\n    e.preventDefault();\r\n    let user;\r\n    if (file) {\r\n      const fileName = new Date().getTime() + file.name;\r\n      const storage = getStorage(app);\r\n      const storageRef = ref(storage, fileName);\r\n      const uploadTask = uploadBytesResumable(storageRef, file);\r\n  \r\n      // Register three observers:\r\n      // 1. 'state_changed' observer, called any time the state changes\r\n      // 2. Error observer, called on failure\r\n      // 3. Completion observer, called on successful completion\r\n      uploadTask.on('state_changed', \r\n        (snapshot) => {\r\n          // Observe state change events such as progress, pause, and resume\r\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n          const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log('Upload is ' + progress + '% done');\r\n          switch (snapshot.state) {\r\n            case 'paused':\r\n              console.log('Upload is paused');\r\n              break;\r\n            case 'running':\r\n              console.log('Upload is running');\r\n              break;\r\n            default:\r\n          }\r\n        }, \r\n        (error) => {\r\n          // Handle unsuccessful uploads\r\n        }, \r\n        () => {\r\n          // Handle successful uploads on complete\r\n          // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n            user = { ...inputs, img: downloadURL };\r\n          });\r\n        },\r\n      );\r\n    } else {\r\n        user = { ...inputs };\r\n      };\r\n    try {\r\n      await userRequest.post(\"/auth/register\", user);\r\n      setInputs({});\r\n      navigate(\"/user\")\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"newUser\">\r\n      <h1 className=\"newUserTitle\">{t(\"title\")}</h1>\r\n      <form className=\"newUserForm\" onSubmit={handleSubmit(handleCreateUser)}>\r\n        <div className=\"newUserItem\">\r\n          <label>{t(\"image\")}</label>\r\n          <input type=\"file\" id=\"file\" onChange={e => setFile(e.target.files[0])}/>\r\n        </div>\r\n        <div className=\"newUserItem\">\r\n          <label>{t(\"username\")}</label>\r\n          <input \r\n            {...register('username', { maxLength: 20 })}\r\n            type=\"text\" \r\n            name='username'\r\n            placeholder={t(\"namePlaceholder\")} \r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          {errors.username && <p style={{ color: 'red' }}>{t(\"username_check\")}</p>}\r\n        </div>\r\n        <div className=\"newUserItem\">\r\n          <label>{t(\"fullName\")}</label>\r\n          <input\r\n            {...register('fullname', { maxLength: 100 })} \r\n            type=\"text\" \r\n            name=\"fullname\"\r\n            placeholder={t(\"fullnamePlaceholder\")}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          {errors.fullname && <p style={{ color: 'red' }}>{t(\"fullname_check\")}</p>}\r\n        </div>\r\n        <div className=\"newUserItem\">\r\n          <label>{t(\"email\")}</label>\r\n          <input \r\n            {...register('email', \r\n            { \r\n                required: 'This is required',\r\n                pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ \r\n            })}\r\n            type=\"email\" \r\n            name=\"email\"\r\n            placeholder={t(\"emailPlaceholder\")} \r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          {errors.email && <p style={{ color: 'red' }}>{t(\"email_check\")}</p>}\r\n        </div>\r\n        <div className=\"newUserItem\">\r\n          <label>{t(\"password\")}</label>\r\n          <input \r\n            {...register('password', { \r\n                required: 'This is required',\r\n                pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15}$/\r\n            })}\r\n            type=\"password\" \r\n            name=\"password\"\r\n            placeholder={t(\"password\")} \r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          {errors.password && <p style={{ color: 'red' }}>{t(\"password_check\")}</p>}\r\n        </div>\r\n        <div className=\"newUserItem\">\r\n          <label>{t(\"phone\")}</label>\r\n          <input \r\n            type=\"text\" \r\n            placeholder={t(\"phonePlaceholder\")} \r\n          />\r\n        </div>\r\n        <div className=\"newUserItem\">\r\n          <label>{t(\"passwordConfirm\")}</label>\r\n          <input \r\n            {...register('passwordConfirm', { \r\n                required: 'This is required',\r\n                pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15}$/\r\n            })}\r\n            type=\"password\" \r\n            name=\"passwordConfirm\"\r\n            placeholder={t(\"confirm_password_placeholder\")} \r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          {inputs.password === inputs.passwordConfirm \r\n            ? inputs.password && <div style={{ color: 'green' }}>{t(\"passwords_match\")}</div>\r\n            : inputs.passwordConfirm && <div style={{ color: 'red' }}>{t(\"passwords_not_match\")}</div>}\r\n        </div>\r\n        <div className=\"newUserItem\">\r\n          <label>{t(\"address\")}</label>\r\n          <input\r\n            {...register('address', { maxLength: 500 })}\r\n            type=\"text\"\r\n            name=\"address\"\r\n            placeholder={t(\"addressPlaceholder\")}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          {errors.address && <p style={{ color: 'red' }}>{t(\"address_check\")}</p>}\r\n        </div>\r\n        <div className=\"newUserItem\">\r\n          <label>{t(\"gender\")}</label>\r\n          <div className=\"newUserGender\">\r\n            <input type=\"radio\" name=\"gender\" id=\"male\" value=\"male\" onChange={(e) => handleChange(e)}/>\r\n            <label for=\"male\">{t(\"male\")}</label>\r\n            <input type=\"radio\" name=\"gender\" id=\"female\" value=\"female\" onChange={(e) => handleChange(e)}/>\r\n            <label for=\"female\">{t(\"female\")}</label>\r\n            <input type=\"radio\" name=\"gender\" id=\"other\" value=\"other\" onChange={(e) => handleChange(e)}/>\r\n            <label for=\"other\">{t(\"other\")}</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"newUserItem\">\r\n          <label>{t(\"active\")}</label>\r\n          <select className=\"newUserSelect\" name=\"active\" id=\"active\" onChange={(e) => handleChange(e)} defaultValue=\"Yes\">\r\n            <option value=\"yes\">{t(\"yes\")}</option>\r\n            <option value=\"no\">{t(\"no\")}</option>\r\n          </select>\r\n        </div>\r\n        <button className=\"newUserButton\" type='submit'>{t(\"create\")}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"," import \"./productList.css\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteProduct } from \"../../redux/apiCalls\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { \r\n  Dialog, \r\n  DialogTitle, \r\n  DialogActions, \r\n  Button \r\n} from '@material-ui/core';\r\n\r\n\r\nexport default function ProductList() {\r\n  const dispatch = useDispatch();\r\n  const products = useSelector(state => state.product.products);\r\n  const [deleteProductId, setDeleteProductId] = useState('');\r\n  const [deleteProductTitle, setDeleteProductTitle] = useState('');\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const { t } = useTranslation([\"productList\"])\r\n\r\n  const columns = [\r\n    { field: \"_id\", headerName: \"ID\", width: 220 },\r\n    {\r\n      field: \"product\",\r\n      headerName: t(\"product\"),\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"productListItem\">\r\n            <img className=\"productListImg\" src={params.row.img} alt=\"\" />\r\n            {t(params.row.title)}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    { \r\n      field: \"inStock\", \r\n      headerName: t(\"stock\"), \r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"productListItem\">\r\n            {t(params.row.inStock)}\r\n          </div>          \r\n        )\r\n      } \r\n    },\r\n    {\r\n      field: \"price\",\r\n      headerName: t(\"price\"),\r\n      width: 160,\r\n    },\r\n    {\r\n      field: \"action\",\r\n      headerName: t(\"action\"),\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={\"/product/\" + params.row._id}>\r\n              <button className=\"productListEdit\">{t(\"edit\")}</button>\r\n            </Link>\r\n            <DeleteOutline\r\n              className=\"productListDelete\"\r\n              onClick={() => {\r\n                setDeleteProductId(params.row._id);\r\n                setDeleteProductTitle(params.row.title);\r\n                setOpenDeleteDialog(true);\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"productList\">\r\n      <Link to=\"/newproduct\">\r\n        <button className=\"createButton\">{t(\"createNewProduct\")}</button>\r\n      </Link>\r\n      <DataGrid\r\n        rows={products}\r\n        disableSelectionOnClick\r\n        columns={columns}\r\n        getRowId={(row) => row._id}\r\n        pageSize={8}\r\n        checkboxSelection\r\n      />\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={() => setOpenDeleteDialog(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        PaperProps={{\r\n          style: { \r\n            border: '3px solid #f54266',\r\n            borderRadius: 10,\r\n            backgroundColor: '#f1eeef',\r\n            justifyContent: 'center',\r\n            textAlign: 'center'\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle>{t(\"deleteConfirmation\")} {deleteProductId} ({deleteProductTitle})?</DialogTitle>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => setOpenDeleteDialog(false)} \r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n          >\r\n            {t(\"cancel\")}\r\n          </Button>\r\n          <Button onClick={() => {\r\n              deleteProduct(deleteProductId, dispatch);\r\n              setOpenDeleteDialog(false);\r\n            }} \r\n            color=\"secondary\" \r\n            autoFocus\r\n            variant=\"outlined\"\r\n          >\r\n            {t(\"delete\")}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"./product.css\";\r\nimport Chart from \"../../components/chart/Chart\"\r\nimport { Publish } from \"@material-ui/icons\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect, useState, useMemo } from \"react\";\r\nimport { userRequest } from \"../../requestMethods\";\r\nimport { updateProduct } from \"../../redux/apiCalls\";\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport app from '../../firebase';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nconst Product = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const productId = location.pathname.split(\"/\")[2];\r\n    const product = useSelector((state) => \r\n        state.product.products.find(product => product._id === productId)\r\n    );\r\n    const isFetching = useSelector((state) => \r\n        state.product.isFetching\r\n    );\r\n\r\n    const [pStats, setPStats] = useState([]);\r\n    const [totalSales, setTotalSales] = useState('');\r\n    const [inputs, setInputs] = useState({});\r\n    const [ file, setFile ] = useState(null);\r\n    const [ cat, setCat ] = useState([]);\r\n    const [ color, setColor ] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation([\"product\"]);\r\n\r\n    const MONTHS = useMemo(\r\n        () => [\r\n            \"Jan\",\r\n            \"Feb\",\r\n            \"Mar\",\r\n            \"Apr\",\r\n            \"May\",\r\n            \"Jun\",\r\n            \"Jul\",\r\n            \"Aug\",\r\n            \"Sep\",\r\n            \"Oct\",\r\n            \"Nov\",\r\n            \"Dec\"\r\n        ], \r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        let ignore = false;\r\n        (async () => {\r\n            try {\r\n                const res = await userRequest.get(\"orders/income?pid=\" + productId);\r\n                const list = res.data.sort((a,b) => {\r\n                    return a._id - b._id\r\n                });\r\n                setPStats([]);\r\n                setTotalSales('');\r\n                !ignore && list.map((item) => \r\n                    setPStats((prev) => [\r\n                        ...prev,\r\n                        { name: MONTHS[item._id - 1], Sales: item.total },\r\n                    ])\r\n                );\r\n                !ignore && setTotalSales(list.reduce((sum, { total }) => sum + total, 0))\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        })();\r\n\r\n        return () => ignore = true;\r\n    }, [productId, MONTHS]);\r\n\r\n    const handleChange = (e) => {\r\n        setInputs(prev => {\r\n            return {...prev, [e.target.name]: e.target.value}\r\n        })\r\n    };\r\n\r\n    const handleDesc = (e) => {\r\n        setInputs(prev => {\r\n            return {\r\n                ...prev,\r\n                [(e.target.name).slice(0,4)]: {\r\n                    ...inputs[(e.target.name).slice(0,4)],\r\n                    [(e.target.name).slice(-2)]: e.target.value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleCat = (e) => {\r\n        setCat(e.target.value.split(\",\"));\r\n    };\r\n\r\n    const handleColor = (e) => {\r\n        setColor(e.target.value.split(\",\"));\r\n    };\r\n\r\n    const category = cat.length === 0 ? product?.categories : cat;\r\n    const colour = color.length === 0 ? product?.color : color;\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        if (file) {\r\n            const fileName = new Date().getTime() + file.name;\r\n            const storage = getStorage(app);\r\n            const storageRef = ref(storage, fileName);\r\n            const uploadTask = uploadBytesResumable(storageRef, file);\r\n    \r\n            // Register three observers:\r\n            // 1. 'state_changed' observer, called any time the state changes\r\n            // 2. Error observer, called on failure\r\n            // 3. Completion observer, called on successful completion\r\n            uploadTask.on('state_changed', \r\n            (snapshot) => {\r\n                // Observe state change events such as progress, pause, and resume\r\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                console.log('Upload is ' + progress + '% done');\r\n                switch (snapshot.state) {\r\n                case 'paused':\r\n                    console.log('Upload is paused');\r\n                    break;\r\n                case 'running':\r\n                    console.log('Upload is running');\r\n                    break;\r\n                default:\r\n                }\r\n            }, \r\n            (error) => {\r\n                // Handle unsuccessful uploads\r\n            },\r\n            () => {\r\n                // Handle successful uploads on complete\r\n                // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                    const productToUpdate = { \r\n                        ...inputs, \r\n                        type: inputs.title, \r\n                        img: downloadURL, \r\n                        categories: category, \r\n                        color: colour\r\n                    };\r\n                    updateProduct(productId, productToUpdate, dispatch)\r\n                });\r\n            },\r\n            navigate('/products/')\r\n            );\r\n        } else {\r\n          const productToUpdate = { \r\n            ...inputs, \r\n            type: inputs.title, \r\n            img: product.img, \r\n            categories: category, \r\n            color: colour\r\n        };\r\n          updateProduct(productId, productToUpdate, dispatch);\r\n          navigate('/products/');\r\n        }\r\n    };\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      <div className=\"productTitleContainer\">\r\n        <h1 className=\"productTitle\">{t(\"product\")}</h1>\r\n        <Link to=\"/newproduct\">\r\n          <button className=\"productAddButton\">{t(\"create\")}</button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"productTop\">\r\n          <div className=\"productTopLeft\">\r\n              <Chart data={pStats} dataKey=\"Sales\" title={t(\"sales_performance\")}/>\r\n          </div>\r\n          <div className=\"productTopRight\">\r\n              <div className=\"productInfoTop\">\r\n                  <img src={product?.img} alt=\"\" className=\"productInfoImg\" />\r\n                  <span className=\"productName\">{t(product?.title)}</span>\r\n              </div>\r\n              <div className=\"productInfoBottom\">\r\n                  <div className=\"productInfoItem\">\r\n                      <span className=\"productInfoKey\">id:</span>\r\n                      <span className=\"productInfoValue\">{product?._id}</span>\r\n                  </div>\r\n                  <div className=\"productInfoItem\">\r\n                      <span className=\"productInfoKey\">{t(\"sales\")}</span>\r\n                      <span className=\"productInfoValue\">{totalSales}</span>\r\n                  </div>\r\n                  <div className=\"productInfoItem\">\r\n                      <span className=\"productInfoKey\">{t(\"inStock\")}</span>\r\n                      <span className=\"productInfoValue\">{product?.inStock ? t(\"true\") : t(\"false\")}</span>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"productBottom\">\r\n          <form className=\"productForm\">\r\n              <div className=\"productFormLeft\">\r\n                  <label>{t(\"productName\")}</label>\r\n                  <input name=\"title\" type=\"text\" defaultValue={t(product?.title)} onChange={handleChange}/>\r\n                  <label>{t(\"productDesc\")} EN</label>\r\n                  <textarea name=\"desc en\" type=\"text\" defaultValue={product?.desc.en} onChange={handleDesc}/>\r\n                  <label>{t(\"productDesc\")} UA</label>\r\n                  <textarea name=\"desc ua\" type=\"text\" defaultValue={product?.desc.ua} onChange={handleDesc}/>\r\n                  <label>{t(\"productDesc\")} RU</label>\r\n                  <textarea name=\"desc ru\" type=\"text\" defaultValue={product?.desc.ru} onChange={handleDesc}/>\r\n                  <label>{t(\"price\")}</label>\r\n                  <input name=\"price\" type=\"text\" defaultValue={product?.price} onChange={handleChange}/>\r\n                  <label>{t(\"color\")}</label>\r\n                  <input type=\"text\" defaultValue={product?.color} onChange={handleColor}/>\r\n                  <label>{t(\"categories\")}</label>\r\n                  <input type=\"text\" defaultValue={product?.categories} onChange={handleCat}/>\r\n                  <label>{t(\"inStock\")}</label>\r\n                  <select name=\"inStock\" id=\"idStock\" onChange={handleChange}>\r\n                      <option value=\"true\">{t(\"true\")}</option>\r\n                      <option value=\"false\">{t(\"false\")}</option>\r\n                  </select>\r\n              </div>\r\n              <div className=\"productFormRight\">\r\n                  <div className=\"productUpload\">\r\n                      <img src={product?.img} alt=\"\" className=\"productUploadImg\" />\r\n                      <label htmlFor=\"file\">\r\n                          <Publish className=\"publish\"/>\r\n                      </label>\r\n                      <input type=\"file\" id=\"file\" style={{display:\"none\"}} onChange={e => setFile(e.target.files[0])}/>\r\n                  </div>\r\n                  <button className=\"productButton\" onClick={(e) => handleClick(e, product._id, product)} disabled={isFetching}>{t(\"update\")}</button>\r\n              </div>\r\n          </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;","import { useState } from \"react\";\r\nimport \"./newProduct.css\";\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport app from '../../firebase';\r\nimport { addProduct } from '../../redux/apiCalls';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nexport default function NewProduct() {\r\n  const [ inputs, setInputs ] = useState({});\r\n  const [ file, setFile ] = useState(null);\r\n  const [ cat, setCat ] = useState([]);\r\n  const [ color, setColor ] = useState([]);\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation([\"newProduct\"]);\r\n  const isFetching = useSelector(state => state.product.isFetching);\r\n\r\n  const handleChange = (e) => {\r\n    setInputs(prev => {\r\n      return {...prev, [e.target.name]: e.target.value}\r\n    })\r\n  };\r\n\r\n  const handleDesc = (e) => {\r\n      setInputs(prev => {\r\n          return {\r\n              ...prev,\r\n              [(e.target.name).slice(0,4)]: {\r\n                  ...inputs[(e.target.name).slice(0,4)],\r\n                  [(e.target.name).slice(-2)]: e.target.value\r\n              }\r\n          }\r\n      })\r\n  }\r\n\r\n  const handleCat = (e) => {\r\n    setCat(e.target.value.split(\",\"));\r\n  }\r\n\r\n  const handleColor = (e) => {\r\n    setColor(e.target.value.split(\",\"));\r\n  }\r\n\r\n  const canSave = [inputs.title, inputs.price, inputs.inStock, file, cat.length, color.length].every(Boolean) && !isFetching;\r\n\r\n  const handleClick = (e) => {\r\n    if (canSave) {\r\n      e.preventDefault();\r\n      if (file) {\r\n        const fileName = new Date().getTime() + file.name;\r\n        const storage = getStorage(app);\r\n        const storageRef = ref(storage, fileName);\r\n        const uploadTask = uploadBytesResumable(storageRef, file);\r\n        \r\n        // Register three observers:\r\n        // 1. 'state_changed' observer, called any time the state changes\r\n        // 2. Error observer, called on failure\r\n        // 3. Completion observer, called on successful completion\r\n        uploadTask.on('state_changed', \r\n        (snapshot) => {\r\n          // Observe state change events such as progress, pause, and resume\r\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n          const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log('Upload is ' + progress + '% done');\r\n          switch (snapshot.state) {\r\n            case 'paused':\r\n              console.log('Upload is paused');\r\n              break;\r\n              case 'running':\r\n                console.log('Upload is running');\r\n                break;\r\n                default:\r\n                }\r\n              }, \r\n              (error) => {\r\n                // Handle unsuccessful uploads\r\n              }, \r\n              () => {\r\n                // Handle successful uploads on complete\r\n                // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                  const product = { ...inputs, type: inputs.title, img: downloadURL, categories: cat, color };\r\n                  addProduct(product, dispatch)\r\n                });\r\n              },\r\n              navigate('/products/')\r\n              );\r\n      } else {\r\n        const product = { ...inputs, type: inputs.title, img: \"\", categories: cat, color };\r\n        addProduct(product, dispatch);\r\n        navigate('/products/');\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"newProduct\">\r\n      <h1 className=\"addProductTitle\">{t(\"newProduct\")}</h1>\r\n      <form className=\"addProductForm\">\r\n        <div className=\"addProductItem\">\r\n          <label>{t(\"image\")}</label>\r\n          <input type=\"file\" id=\"file\" onChange={e => setFile(e.target.files[0])}/>\r\n        </div>\r\n        <div className=\"addProductItem\">\r\n          <label>{t(\"title\")}</label>\r\n          <input name=\"title\" type=\"text\" placeholder=\"Caubernet\" onChange={handleChange}/>\r\n        </div>\r\n        <div className=\"addProductItem\">\r\n          <label>{t(\"descEn\")}</label>\r\n          <input name=\"desc_en\" type=\"text\" placeholder=\"description...\" onChange={handleDesc}/>\r\n        </div>\r\n        <div className=\"addProductItem\">\r\n          <label>{t(\"descUa\")}</label>\r\n          <input name=\"desc_ua\" type=\"text\" placeholder=\"опис...\" onChange={handleDesc}/>\r\n        </div>\r\n        <div className=\"addProductItem\">\r\n          <label>{t(\"descRu\")}</label>\r\n          <input name=\"desc_ru\" type=\"text\" placeholder=\"описание...\" onChange={handleDesc}/>\r\n        </div>\r\n        <div className=\"addProductItem\">\r\n          <label>{t(\"price\")}</label>\r\n          <input name=\"price\" type=\"number\" placeholder=\"UAH 25\" onChange={handleChange}/>\r\n        </div>\r\n        <div className=\"addProductItem\">\r\n          <label>{t(\"color\")}</label>\r\n          <input type=\"text\" placeholder=\"red, white\" onChange={handleColor}/>\r\n        </div>\r\n        <div className=\"addProductItem\">\r\n          <label>{t(\"categories\")}</label>\r\n          <input type=\"text\" placeholder=\"european, hybrid\" onChange={handleCat}/>\r\n        </div>\r\n        <div className=\"addProductItem\">\r\n          <label>{t(\"stock\")}</label>\r\n          <select name=\"inStock\" onChange={handleChange}>\r\n            <option value=\"true\">Yes</option>\r\n            <option value=\"false\">No</option>\r\n          </select>\r\n        </div>\r\n        <button \r\n          onClick={handleClick} \r\n          className=\"addProductButton\"\r\n          disabled={!canSave}\r\n        >\r\n          {t(\"button\")}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { login } from '../../redux/apiCalls';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const { currentUser, isFetching, error } = useSelector((state) => state.user);\r\n    const { t } = useTranslation([\"login\"])   \r\n\r\n    const handleClick = async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n        await login(dispatch, { username, password });\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    };\r\n\r\n  return (\r\n    <div \r\n      style={{ \r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        display: \"flex\" , \r\n        flexDirection: \"column\",\r\n        alignItems: \"center\", \r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <input \r\n        style={{\r\n          padding: \"10px\",\r\n          marginBottom: \"20px\"\r\n        }}\r\n        type=\"text\" \r\n        placeholder=\"username\" \r\n        onChange={e=>setUsername(e.target.value)} \r\n      />\r\n      <input \r\n        style={{\r\n          padding: \"10px\",\r\n          marginBottom: \"20px\"\r\n        }}\r\n        type=\"password\" \r\n        placeholder=\"password\" \r\n        onChange={e=>setPassword(e.target.value)} \r\n      />\r\n      <button \r\n        style={{\r\n          padding: 10,\r\n          width: \"100px\"\r\n        }}\r\n        onClick={handleClick}\r\n        disabled={isFetching}\r\n      >\r\n        {t(\"login\")}\r\n      </button>\r\n      {error && <p style={{ color: \"red\" }}>{t(\"wrong\")}</p>}\r\n      {!error && currentUser && <Navigate to=\"/\" />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import Chart from \"../../components/chart/Chart\";\r\nimport FeaturedInfo from \"../../components/featuredInfo/FeaturedInfo\";\r\nimport \"./sales.css\";\r\nimport WidgetSm from \"../../components/widgetSm/WidgetSm\";\r\nimport WidgetLg from \"../../components/widgetLg/WidgetLg\";\r\nimport { useState, useMemo, useEffect } from \"react\";\r\nimport { userRequest } from \"../../requestMethods\";\r\n\r\n\r\nconst Sales = () => {\r\n  const [orderStats, setOrderStats] = useState([]);\r\n\r\n  const MONTHS = useMemo(\r\n    () => [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\"\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await userRequest.get(\"/orders/income\");\r\n        res.data.map(item => \r\n          setOrderStats(prev => [\r\n            ...prev,\r\n            {name:MONTHS[item._id-1], \"Sales\": item.total},\r\n          ])\r\n        );\r\n      } catch(err) {\r\n        console.log(err)\r\n      }\r\n    })()\r\n  }, [MONTHS]);\r\n\r\n  return (\r\n    <div className=\"sales\">\r\n      <FeaturedInfo />\r\n      <Chart data={orderStats} title=\"Sales\" grid dataKey=\"Sales\"/>\r\n      <div className=\"salesWidgets\">\r\n        <WidgetSm />\r\n        <WidgetLg />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sales;\r\n","import \"./orderList.css\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from \"react\";\r\nimport { deleteOrder } from \"../../redux/apiCalls\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\nimport {format} from 'timeago.js';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { \r\n  Dialog, \r\n  DialogTitle, \r\n  DialogActions, \r\n  Button \r\n} from '@material-ui/core';\r\nimport { useLocale } from \"../../constants\";\r\n\r\n\r\nconst OrderList = () => {\r\n  const dispatch = useDispatch();\r\n  const orders = useSelector(state => state.order.orders);\r\n  const [deleteOrderId, setDeleteOrderId] = useState(null);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const { t } = useTranslation([\"orderList\"]);\r\n  const locale = useLocale();\r\n\r\n  const columns = [\r\n    { field: \"_id\", headerName: t(\"id\"), width: 200 },\r\n    {\r\n      field: \"userId\",\r\n      headerName: t(\"user\"),\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"orderListOrder\">\r\n            {params.row.userId}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    { field: \"email\", headerName: t(\"email\"), width: 200 },\r\n    {\r\n      field: \"status\",\r\n      headerName: t(\"status\"),\r\n      width: 120,\r\n    },\r\n    {\r\n        field: \"products\",\r\n        headerName: t(\"products\"),\r\n        width: 200,\r\n        renderCell: (params) => {\r\n            return (\r\n                <ul className=\"productListItem\">\r\n                    {params.row.products.map(product => (\r\n                        <li key={product._id}>\r\n                            {product.title}/ \r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            );\r\n        }\r\n    },\r\n    {\r\n        field: \"amount\",\r\n        headerName: t(\"amount\"),\r\n        width: 150,\r\n        renderCell: (params) => {\r\n            return (\r\n                <p>{params.row.amount} UAH</p>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        field: \"address\",\r\n        headerName: t(\"address\"),\r\n        width: 150,\r\n        renderCell: (params) => {\r\n            return (\r\n                <p>{params.row.address.city}</p>\r\n            )\r\n        }\r\n    },\r\n    {\r\n      field: \"createdAt\",\r\n      headerName: t(\"createdAt\"),\r\n      width: 160,\r\n      renderCell: (params) => {\r\n        return (\r\n            <div>\r\n                {format(params.row.createdAt, locale)}\r\n            </div>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      field: \"action\",\r\n      headerName: t(\"action\"),\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={\"/order/\" + params.row._id}>\r\n              <button className=\"orderListEdit\">{t(\"view\")}</button>\r\n            </Link>\r\n            <DeleteOutline\r\n              className=\"orderListDelete\"\r\n              onClick={() => {\r\n                setDeleteOrderId(params.row._id);\r\n                setOpenDeleteDialog(true)                \r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"orderList\">\r\n      <DataGrid\r\n        rows={orders}\r\n        disableSelectionOnClick\r\n        columns={columns}\r\n        getRowId={(row) => row._id}\r\n        pageSize={12}\r\n        checkboxSelection\r\n      />\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={() => setOpenDeleteDialog(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>{t(\"deleteConfirmation\")} {deleteOrderId} ?</DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenDeleteDialog(false)} color=\"primary\">\r\n            {t(\"cancel\")}\r\n          </Button>\r\n          <Button onClick={() => {\r\n            deleteOrder(deleteOrderId, dispatch);\r\n            setOpenDeleteDialog(false);\r\n          }} color=\"primary\" autoFocus>\r\n            {t(\"delete\")}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderList;\r\n","import {\r\n  Person,\r\n  PermIdentity,\r\n  LocalShippingOutlined,\r\n  CalendarToday,\r\n  Place,\r\n  MailOutline,\r\n} from \"@material-ui/icons\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport \"./order.css\";\r\nimport {format} from 'timeago.js';\r\nimport { useState } from \"react\";\r\nimport { updateOrder } from \"../../redux/apiCalls\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useLocale } from \"../../constants\";\r\n\r\n\r\nconst Order = () => {\r\n  const location = useLocation();\r\n  const orderId = location.pathname.split(\"/\")[2];\r\n  const dispatch = useDispatch();\r\n  const order = useSelector((state) => \r\n    state.order.orders.find(order => order._id === orderId)\r\n  );\r\n  \r\n  const [ status, setStatus ] = useState('');\r\n  const { t } = useTranslation([\"order\"]);\r\n  const locale = useLocale();\r\n\r\n  const handleUpdateOrder = (e) => {\r\n    setStatus(e.target.value)\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const orderToUpdate = {\r\n        ...order,\r\n        status\r\n    };\r\n    updateOrder(orderId, orderToUpdate, dispatch);\r\n    setStatus('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"order\">\r\n        <button \r\n            className={!status ? \"displayNone\" : \"orderUpdateButton\"}\r\n            onClick={(e) => handleClick(e)}\r\n        >\r\n            {t(\"update\")}\r\n        </button>\r\n        <h1 className=\"orderTitle\">{t(\"title\")} {order._id}</h1>\r\n        <div className=\"personalInfo\">\r\n            <div className=\"left\">\r\n                <div className=\"infoTitle\">\r\n                    <Person />\r\n                    <h2>{t(\"personalInfo.title\")}</h2>\r\n                </div>\r\n                <div className=\"infoLine\">\r\n                    <p className=\"infoLineTitle\"><PermIdentity className=\"userShowIcon\"/> {t(\"personalInfo.userId\")}</p>\r\n                    <p>{order.userId}</p>\r\n                </div>\r\n                <div className=\"infoLine\">\r\n                    <p className=\"infoLineTitle\"><MailOutline className=\"userShowIcon\"/> {t(\"personalInfo.userEmail\")}</p>\r\n                    <p>{order.email}</p>\r\n                </div>\r\n                <div className=\"infoLine\">\r\n                    <p className=\"infoLineTitle\"><LocalShippingOutlined className=\"userShowIcon\"/> {t(\"personalInfo.orderStatus\")}</p>\r\n                    <select \r\n                        name=\"status\" \r\n                        defaultValue={order.status} \r\n                        className={status ? \"status_\" + status : \"status_\" + order.status}\r\n                        onChange={(e) => handleUpdateOrder(e)}\r\n                    >\r\n                        <option value=\"approved\">{t(\"approved\")}</option>\r\n                        <option value=\"shipped\">{t(\"shipped\")}</option>\r\n                        <option value=\"declined\">{t(\"declined\")}</option>\r\n                        <option value=\"delivered\">{t(\"delivered\")}</option>\r\n                        <option value=\"pending\">{t(\"pending\")}</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"infoLine\">\r\n                    <p className=\"infoLineTitle\"><CalendarToday className=\"userShowIcon\"/> {t(\"personalInfo.createdAt\")}</p>\r\n                    <p>{format(order.createdAt, locale)}</p>\r\n                </div>\r\n                <div className=\"infoLine\">\r\n                    <p className=\"infoLineTitle\"><CalendarToday className=\"userShowIcon\"/> {t(\"personalInfo.updatedAt\")}</p>\r\n                    <p>{format(order.updatedAt, locale)}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"right\">\r\n                <div className=\"infoTitle\">\r\n                    <Place />\r\n                    <h2>{t(\"address.title\")}</h2>\r\n                </div>\r\n                <div className=\"infoLine\">\r\n                    <p className=\"infoLineTitle\">{t(\"address.street\")}</p>\r\n                    <p>{order.address?.line1}</p>\r\n                </div>    \r\n                <div className=\"infoLine\">\r\n                    <p className=\"infoLineTitle\"></p>\r\n                    <p>{order.address?.line2}</p>\r\n                </div>\r\n                <div className=\"infoLine\">\r\n                    <p className=\"infoLineTitle\">{t(\"address.city\")}</p>\r\n                    <p>{order.address?.city}</p>\r\n                </div>\r\n                <div className=\"infoLine\">\r\n                    <p className=\"infoLineTitle\">{t(\"address.state\")}</p>\r\n                    <p>{order.address?.state}</p>\r\n                </div>\r\n                <div className=\"infoLine\">\r\n                    <p className=\"infoLineTitle\">{t(\"address.postCode\")}</p>\r\n                    <p>{order.address?.postal_code}</p>\r\n                </div> \r\n            </div>\r\n        </div>\r\n        <div className=\"productsInfo\">\r\n            <h2 className=\"order\">{t(\"products.title\")}</h2>\r\n            <table className=\"productsTable\">\r\n                <thead>\r\n                    <tr className=\"productTr\">\r\n                        <th className=\"productsTh\">{t(\"products.productId\")}</th>\r\n                        <th className=\"productsTh\">{t(\"products.productTitle\")}</th>\r\n                        <th className=\"productsTh\">{t(\"products.color\")}</th>\r\n                        <th className=\"productsTh\">{t(\"products.quantity\")}</th>\r\n                        <th className=\"productsTh\">{t(\"products.price100kg\")}</th>\r\n                        <th className=\"productsTh\">{t(\"products.priceProduct\")}</th>\r\n                    </tr>\r\n                </thead>\r\n                {order.products.map((product) => (\r\n                    <tbody key={product._id}>\r\n                        <tr className=\"productTr\" key={product._id}>\r\n                            <td className=\"productTh\">{product.productId}</td>\r\n                            <td className=\"productTh\">{product.title}</td>\r\n                            <td className=\"productTh\">{product.color}</td>\r\n                            <td className=\"productTh\">{product.quantity}</td>\r\n                            <td className=\"productTh\">{product.price} {t(\"uah\")}</td>\r\n                            <td className=\"productTh\">{product.quantity * product.price} {t(\"uah\")}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                ))}\r\n            </table>\r\n            <h2 className=\"totalAmount\">{t(\"totalAmount\")} {order.amount} {t(\"uah\")}</h2>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import \"./messageList.css\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateMessage } from \"../../redux/apiCalls\";\r\nimport {format} from 'timeago.js';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useLocale } from \"../../constants\";\r\n\r\n\r\nconst MessageList = () => {\r\n    const dispatch = useDispatch();\r\n    const messages = useSelector(state => state.message.messages);\r\n    const { t } = useTranslation([\"messageList\"]);\r\n    const locale = useLocale();\r\n\r\n    const handleToggleRead = (message) => {\r\n        const messageToUpdate = {\r\n            ...message,\r\n            read: !message.read\r\n        }\r\n        updateMessage(message._id, messageToUpdate, dispatch);\r\n    };\r\n\r\n  return (\r\n    <div className='messagesContainer'>\r\n        <h1 className=\"messagesTitle\">{t(\"title\")}</h1>\r\n        {messages?.map(message => {\r\n            return (\r\n                <div className=\"messageBlock\" key={message._id}>\r\n                    <button className={message.read ? \"markRead\" : \"markNotRead\"} onClick={() => handleToggleRead(message)}></button>\r\n                    <div className={message.read ? \"messageDetails read\" : \"messageDetails notRead\"} onClick={() => handleToggleRead(message)}>\r\n                        <div className=\"topLineList\">\r\n                           <b>{t(\"receivedFromUsername\")}</b>: {message.username}\r\n                        </div>\r\n                        <div className=\"middleLine\">\r\n                            <div className=\"emailLine\"><b>{t(\"email\")}</b>: {message.email}</div>\r\n                        </div>\r\n                        <div className=\"middleLine\">\r\n                            <div className=\"subjectLine\"><b>{t(\"subject\")}</b>: {message.subject}</div>\r\n                        </div>\r\n                        <div className=\"messageBlock\">\r\n                            <div className=\"messageLine\">{message.message.substring(0,100)}...</div>\r\n                        </div>\r\n                        <div className=\"bottomLine\">\r\n                            ({format(message.createdAt, locale)})\r\n                        </div>\r\n                    </div>\r\n                    <NavLink to={`/message/${message._id}`} className=\"viewLink\">\r\n                        {t(\"viewMessage\")}\r\n                    </NavLink>\r\n                </div>\r\n            )\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageList\r\n","import { useSelector } from 'react-redux';\r\nimport { useLocation, NavLink } from \"react-router-dom\";\r\nimport \"./message.css\";\r\nimport {format} from 'timeago.js';\r\nimport { useEffect } from 'react';\r\nimport { setMessageRead } from '../../redux/apiCalls';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useLocale } from '../../constants';\r\n\r\n\r\nconst Message = () => {\r\n    const location = useLocation();\r\n    const messageId = location.pathname.split(\"/\")[2];\r\n    const message = useSelector(state => \r\n        state.message.messages.find(message => message._id === messageId)\r\n    );\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation([\"message\"]);\r\n    const locale = useLocale();\r\n\r\n    useEffect(() => {\r\n        const messageToUpdate = {\r\n            ...message,\r\n            read: true\r\n        }\r\n        setMessageRead(messageId, messageToUpdate, dispatch);\r\n    }, [dispatch, messageId, message])\r\n    \r\n    if (!message) {\r\n        return (\r\n            <section>\r\n                <h2>{t(\"messageNotFound\")}</h2>\r\n            </section>\r\n        )\r\n    }\r\n\r\n\r\n  return (\r\n    <section className='messageContainer'>\r\n      <article className=\"message\">\r\n        <h2>{message.subject}</h2>\r\n            <div className=\"topLine\">\r\n                <div>\r\n                    <b>{t(\"receivedFromUsername\")}</b>: {message.username}\r\n                </div>\r\n                <div>\r\n                    <b>{t(\"userId\")}</b>: {message.userId}\r\n                </div>\r\n            </div>\r\n            <div className=\"middleLine\">\r\n                <b>{t(\"fullName\")}</b>: \r\n                <span> {message.title ? message.title : ''} </span> \r\n                <span>{message.firstName ? message.firstName : ''} </span>\r\n                <span>{message.lastName ? message.lastName : ''}</span>\r\n            </div>\r\n            <div className=\"middleLine\">\r\n                <div className=\"emailLine\"><b>{t(\"email\")}</b>: {message.email ? message.email : 'unknown'}</div>\r\n            </div>\r\n            <div className=\"middleLine\">\r\n                <b>{t(\"telephone\")}</b>: {message.telephone ? message.telephone : t(\"unknown\")}\r\n            </div>\r\n        <p className='messageContent'>{message.message}</p>\r\n        <div className='bottomLine'>\r\n            <p className=\"timeSent\">{format(message.createdAt, locale)}</p>\r\n            {message.userId !== 'unregistered' && \r\n            <NavLink to={`/user/${message.userId}`}>\r\n                <p className=\"timeSent\">{t(\"allMessagessFromUser\")}</p>\r\n            </NavLink>}\r\n        </div>\r\n      </article>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Message;\r\n","import React, { Suspense } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Sidebar from \"./components/sidebar/Sidebar\";\r\nimport Topbar from \"./components/topbar/Topbar\";\r\nimport \"./App.css\";\r\nimport Home from \"./pages/home/Home\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport UserList from \"./pages/userList/UserList\";\r\nimport User from \"./pages/user/User\";\r\nimport NewUser from \"./pages/newUser/NewUser\";\r\nimport ProductList from \"./pages/productList/ProductList\";\r\nimport Product from \"./pages/product/Product\";\r\nimport NewProduct from \"./pages/newProduct/NewProduct\";\r\nimport Login from \"./pages/login/Login\";\r\nimport Sales from \"./pages/sales/Sales\";\r\nimport OrderList from \"./pages/orderList/OrderList\";\r\nimport { getMessages, getOrders, getProducts, getUsers } from \"./redux/apiCalls\";\r\nimport Order from \"./pages/order/Order\";\r\nimport MessageList from \"./pages/messageList/MessageList\";\r\nimport Message from \"./pages/message/Message\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const user = !!useSelector(state => state.user.currentUser);\r\n\r\n  useEffect(() => {\r\n    let ignore = false;\r\n    if (!ignore && user) {\r\n      getMessages(dispatch);\r\n      getProducts(dispatch);\r\n      getOrders(dispatch);\r\n      getUsers(dispatch);\r\n    }\r\n    return () => ignore = true;\r\n  }, [dispatch, user]);\r\n\r\n  \r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Router>\r\n        <Topbar />\r\n        <div className=\"container\">\r\n          {user && <Sidebar />}\r\n          <Routes>\r\n            <Route path=\"/login\" element={user ? <Home /> : <Login />} />\r\n            {user && (\r\n              <>\r\n                  <Route exact path=\"/\" element={<Home />} />\r\n                  <Route path=\"/orders\" element={<OrderList />} />\r\n                  <Route path=\"/order/:orderId\" element={<Order />} />\r\n                  <Route path=\"/users\" element={<UserList />} />\r\n                  <Route path=\"/user/:userId\" element={<User />} />\r\n                  <Route path=\"/newUser\" element={<NewUser />} />\r\n                  <Route path=\"/products\" element={<ProductList />} />\r\n                  <Route path=\"/product/:productId\" element={<Product />} />\r\n                  <Route path=\"/newproduct\" element={<NewProduct />} />\r\n                  <Route path=\"/sales\" element={<Sales />} />\r\n                  <Route path=\"/messages\" element={<MessageList />} />\r\n                  <Route path=\"/message/:messageId\" element={<Message />} />\r\n              </>\r\n            )}\r\n          </Routes>\r\n        </div>\r\n      </Router>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport userReducer from './userRedux';\r\nimport productReducer from './productRedux';\r\nimport orderReducer from './orderRedux';\r\nimport messageReducer from './messageRedux';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n  purgeStoredState\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  version: 1,\r\n  storage,\r\n};\r\n\r\nconst appReducer = combineReducers({ \r\n  user: userReducer, \r\n  product: productReducer, \r\n  order: orderReducer,\r\n  message: messageReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'user/logoutSuccess') {\r\n    storage.removeItem('persist:root');\r\n    storage.removeItem('i18nextLng');\r\n    purgeStoredState(persistConfig);\r\n    state = undefined;\r\n  };\r\n\r\n  return appReducer(state, action);\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n            },\r\n        }),\r\n});\r\n\r\nexport const persistor = persistStore(store);","import i18n from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\ni18n\r\n    .use(Backend)\r\n    // detect user language\r\n    .use(LanguageDetector)\r\n    // pass the i18 instance to react-i18next.\r\n    .use(initReactI18next)\r\n    // init i18next\r\n    .init({\r\n        backend: {\r\n            // translation file path\r\n            loadPath: \"/locales/{{ns}}/{{lng}}.json\",\r\n        },\r\n        debug: false,\r\n        fallbackLng: 'en',\r\n        interpolation: {\r\n            formatSeparator: \",\"\r\n        },\r\n        ns: [\r\n            \"topbar\", \r\n            \"sidebar\", \r\n            \"featuredInfo\", \r\n            \"home\", \r\n            \"widgetSm\", \r\n            \"widgetLg\", \r\n            \"userList\", \r\n            \"orderList\", \r\n            \"order\", \r\n            \"user\", \r\n            \"newUser\",\r\n            \"productList\",\r\n            \"product\",\r\n            \"newProduct\",\r\n            \"messageList\",\r\n            \"message\"\r\n        ],\r\n        react: {\r\n            // wait: true,\r\n            useSuspense: true,\r\n        },\r\n    });\r\n\r\nexport default i18n;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './i18n';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}